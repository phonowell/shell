; Generated by Coffee-AHK/0.0.48
global __ci_shell__ := Func("shell_305")
global __shell_module_1__ := (Func("shell_304")).Call()
global __shell_module_2__ := (Func("shell_302")).Call()
global __shell_module_5__ := (Func("shell_300")).Call()
global __shell_module_7__ := (Func("shell_298")).Call()
global __shell_module_8__ := (Func("shell_296")).Call()
global __shell_module_12__ := (Func("shell_294")).Call()
global __shell_module_13__ := (Func("shell_292")).Call()
global __shell_module_22__ := (Func("shell_290")).Call()
global __shell_module_24__ := (Func("shell_288")).Call()
global __shell_module_29__ := (Func("shell_286")).Call()
global __shell_module_32__ := (Func("shell_284")).Call()
global __shell_module_37__ := (Func("shell_282")).Call()
global __shell_module_38__ := (Func("shell_280")).Call()
global __shell_module_40__ := (Func("shell_278")).Call()
global __shell_module_42__ := (Func("shell_276")).Call()
global __shell_module_44__ := (Func("shell_274")).Call()
global __shell_module_46__ := (Func("shell_272")).Call()
global __shell_module_47__ := (Func("shell_270")).Call()
global __shell_module_54__ := (Func("shell_268")).Call()
global __shell_module_55__ := (Func("shell_266")).Call()
global __shell_module_56__ := (Func("shell_264")).Call()
global __shell_module_57__ := (Func("shell_262")).Call()
global __shell_module_60__ := (Func("shell_260")).Call()
global __shell_module_61__ := (Func("shell_258")).Call()
global __shell_module_62__ := (Func("shell_256")).Call()
global __shell_module_64__ := (Func("shell_254")).Call()
global __shell_module_70__ := (Func("shell_251")).Call()
global __shell_module_72__ := (Func("shell_249")).Call()
global __shell_module_73__ := (Func("shell_247")).Call()
global __shell_module_77__ := (Func("shell_245")).Call()
global __shell_module_81__ := (Func("shell_244")).Call()
global __shell_module_82__ := (Func("shell_242")).Call()
global __abs__ := __shell_module_1__
(Func("shell_240")).Call()
global __add__ := __shell_module_2__
(Func("shell_239")).Call()
global __ceil__ := __shell_module_8__
(Func("shell_238")).Call()
global __delete__ := __shell_module_22__
(Func("shell_237")).Call()
(Func("shell_236")).Call()
global __first__ := __shell_module_37__
(Func("shell_235")).Call()
global __floor__ := __shell_module_38__
(Func("shell_234")).Call()
global __getType__ := __shell_module_29__
(Func("shell_233")).Call()
global __gt__ := __shell_module_46__
(Func("shell_232")).Call()
global __gte__ := __shell_module_47__
(Func("shell_231")).Call()
global __lt__ := __shell_module_54__
(Func("shell_230")).Call()
global __lte__ := __shell_module_55__
(Func("shell_229")).Call()
global __mod__ := __shell_module_60__
(Func("shell_228")).Call()
global __once__ := __shell_module_64__
(Func("shell_227")).Call()
global __replace__ := __shell_module_70__
(Func("shell_225")).Call()
(Func("shell_224")).Call()
global __startsWith__ := __shell_module_73__
(Func("shell_223")).Call()
global __shell_module_3__ := (Func("shell_222")).Call()
global __shell_module_4__ := (Func("shell_220")).Call()
global __shell_module_14__ := (Func("shell_218")).Call()
global __shell_module_18__ := (Func("shell_216")).Call()
global __shell_module_28__ := (Func("shell_214")).Call()
global __shell_module_35__ := (Func("shell_212")).Call()
global __shell_module_36__ := (Func("shell_210")).Call()
global __shell_module_41__ := (Func("shell_208")).Call()
global __shell_module_43__ := (Func("shell_206")).Call()
global __shell_module_49__ := (Func("shell_204")).Call()
global __shell_module_50__ := (Func("shell_202")).Call()
global __shell_module_51__ := (Func("shell_200")).Call()
global __shell_module_65__ := (Func("shell_198")).Call()
global __shell_module_66__ := (Func("shell_196")).Call()
global __shell_module_74__ := (Func("shell_194")).Call()
__replace__ := __shell_module_70__
global __noop__ := __shell_module_61__
class FileShell {
  __New(source) {
    this.source := source
  }
  append := Func("shell_192").Bind(this)
  isExists := Func("shell_191").Bind(this)
  read := Func("shell_190").Bind(this)
  remove := Func("shell_189").Bind(this)
  write := Func("shell_188").Bind(this)
}
__noop__.Call(FileShell)
global __alert__ := __shell_module_3__
global __isFunction__ := __shell_module_4__
(Func("shell_187")).Call()
global __beep__ := __shell_module_5__
__isFunction__ := __shell_module_4__
(Func("shell_186")).Call()
global __blockInput__ := __shell_module_7__
__isFunction__ := __shell_module_4__
(Func("shell_185")).Call()
global __clearInterval__ := __shell_module_12__
__isFunction__ := __shell_module_4__
(Func("shell_184")).Call()
global __clearTimeout__ := __shell_module_13__
__isFunction__ := __shell_module_4__
(Func("shell_183")).Call()
global __click__ := __shell_module_14__
__isFunction__ := __shell_module_4__
(Func("shell_182")).Call()
global __confirm__ := __shell_module_18__
__isFunction__ := __shell_module_4__
(Func("shell_181")).Call()
global __exit__ := __shell_module_32__
__isFunction__ := __shell_module_4__
(Func("shell_180")).Call()
global __findColor__ := __shell_module_35__
__isFunction__ := __shell_module_4__
(Func("shell_179")).Call()
global __findImage__ := __shell_module_36__
__isFunction__ := __shell_module_4__
(Func("shell_178")).Call()
global __get__ := __shell_module_40__
__isFunction__ := __shell_module_4__
(Func("shell_177")).Call()
global __getColor__ := __shell_module_41__
__isFunction__ := __shell_module_4__
(Func("shell_176")).Call()
global __isArray__ := __shell_module_49__
(Func("shell_175")).Call()
__isFunction__ := __shell_module_4__
(Func("shell_174")).Call()
global __isNumber__ := __shell_module_50__
(Func("shell_172")).Call()
global __isObject__ := __shell_module_28__
(Func("shell_171")).Call()
global __isString__ := __shell_module_51__
(Func("shell_170")).Call()
__isFunction__ := __shell_module_4__
global __max__ := __shell_module_56__
(Func("shell_169")).Call()
__isFunction__ := __shell_module_4__
global __min__ := __shell_module_57__
(Func("shell_168")).Call()
__isFunction__ := __shell_module_4__
__noop__ := __shell_module_61__
(Func("shell_167")).Call()
__isNumber__ := __shell_module_50__
global __now__ := __shell_module_62__
(Func("shell_166")).Call()
__isFunction__ := __shell_module_4__
global __open__ := __shell_module_65__
(Func("shell_165")).Call()
__isFunction__ := __shell_module_4__
global __play__ := __shell_module_66__
(Func("shell_164")).Call()
global __subString__ := __shell_module_74__
(Func("shell_163")).Call()
__isString__ := __shell_module_51__
global __version__ := __shell_module_77__
(Func("shell_162")).Call()
global __shell_module_25__ := (Func("shell_161")).Call()
global __shell_module_33__ := (Func("shell_159")).Call()
global __shell_module_67__ := (Func("shell_157")).Call()
global __shell_module_69__ := (Func("shell_155")).Call()
global __shell_module_71__ := (Func("shell_153")).Call()
global __shell_module_76__ := (Func("shell_151")).Call()
global __shell_module_78__ := (Func("shell_149")).Call()
global __file__ := __shell_module_33__
__isFunction__ := __shell_module_4__
__isObject__ := __shell_module_28__
(Func("shell_147")).Call()
(Func("shell_146")).Call()
global __length__ := __shell_module_25__
(Func("shell_145")).Call()
(Func("shell_144")).Call()
(Func("shell_143")).Call()
global __pop__ := __shell_module_67__
(Func("shell_142")).Call()
global __push__ := __shell_module_69__
(Func("shell_141")).Call()
global __shift__ := __shell_module_71__
(Func("shell_140")).Call()
__length__ := __shell_module_25__
global __split__ := __shell_module_72__
(Func("shell_139")).Call()
(Func("shell_138")).Call()
global __unshift__ := __shell_module_76__
(Func("shell_137")).Call()
global __shell_module_6__ := (Func("shell_136")).Call()
global __shell_module_9__ := (Func("shell_134")).Call()
global __shell_module_10__ := (Func("shell_132")).Call()
global __shell_module_11__ := (Func("shell_130")).Call()
global __shell_module_34__ := (Func("shell_128")).Call()
global __shell_module_39__ := (Func("shell_126")).Call()
global __shell_module_48__ := (Func("shell_122")).Call()
global __shell_module_53__ := (Func("shell_120")).Call()
global __shell_module_63__ := (Func("shell_118")).Call()
global __shell_module_75__ := (Func("shell_116")).Call()
global __shell_module_85__ := (Func("shell_114")).Call()
global __bind__ := __shell_module_6__
__isFunction__ := __shell_module_4__
(Func("shell_112")).Call()
global __chunk__ := __shell_module_9__
global __join__ := __shell_module_10__
global __map__ := __shell_module_11__
(Func("shell_111")).Call()
global __each__ := __shell_module_24__
__length__ := __shell_module_25__
__join__ := __shell_module_10__
(Func("shell_109")).Call()
global __filter__ := __shell_module_34__
__join__ := __shell_module_10__
(Func("shell_107")).Call()
global __formatHotkey__ := __shell_module_39__
(Func("shell_105")).Call()
(Func("shell_104")).Call()
(Func("shell_103")).Call()
(Func("shell_102")).Call()
(Func("shell_101")).Call()
global __getPosition__ := __shell_module_42__
__isFunction__ := __shell_module_4__
__join__ := __shell_module_10__
global __move__ := __shell_module_43__
global __sleep__ := __shell_module_44__
(Func("shell_100")).Call()
global __includes__ := __shell_module_48__
(Func("shell_99")).Call()
(Func("shell_98")).Call()
__join__ := __shell_module_10__
(Func("shell_97")).Call()
global __last__ := __shell_module_53__
(Func("shell_96")).Call()
__join__ := __shell_module_10__
__map__ := __shell_module_11__
(Func("shell_95")).Call()
__getPosition__ := __shell_module_42__
__move__ := __shell_module_43__
__join__ := __shell_module_10__
__sleep__ := __shell_module_44__
(Func("shell_93")).Call()
global __nth__ := __shell_module_63__
(Func("shell_92")).Call()
__isFunction__ := __shell_module_4__
global __tip__ := __shell_module_75__
(Func("shell_91")).Call()
global __shell_module_16__ := (Func("shell_90")).Call()
global __shell_module_23__ := (Func("shell_87")).Call()
global __shell_module_26__ := (Func("shell_84")).Call()
global __shell_module_30__ := (Func("shell_82")).Call()
global __shell_module_31__ := (Func("shell_80")).Call()
global __shell_module_45__ := (Func("shell_78")).Call()
global __shell_module_68__ := (Func("shell_76")).Call()
global __shell_module_79__ := (Func("shell_72")).Call()
global __shell_module_80__ := (Func("shell_70")).Call()
__each__ := __shell_module_24__
__filter__ := __shell_module_34__
__noop__ := __shell_module_61__
__push__ := __shell_module_69__
__split__ := __shell_module_72__
class EmitterShell {
  __New() {
    this.bus := []
  }
  emit := Func("shell_68").Bind(this)
  off := Func("shell_63").Bind(this)
  on := Func("shell_60").Bind(this)
  once := Func("shell_59").Bind(this)
}
__noop__.Call(EmitterShell)
global __shell_module_83__ := (Func("shell_58")).Call()
global __compact__ := __shell_module_16__
__join__ := __shell_module_10__
(Func("shell_56")).Call()
global __drop__ := __shell_module_23__
__join__ := __shell_module_10__
(Func("shell_55")).Call()
global __echo__ := __shell_module_26__
__isFunction__ := __shell_module_4__
(Func("shell_54")).Call()
global __eq__ := __shell_module_30__
(Func("shell_53")).Call()
(Func("shell_52")).Call()
(Func("shell_51")).Call()
(Func("shell_50")).Call()
global __exec__ := __shell_module_31__
__isFunction__ := __shell_module_4__
(Func("shell_49")).Call()
global __getState__ := __shell_module_45__
__isFunction__ := __shell_module_4__
(Func("shell_48")).Call()
__isFunction__ := __shell_module_4__
global __press__ := __shell_module_68__
(Func("shell_47")).Call()
global __shell_module_15__ := (Func("shell_46")).Call()
global __shell_module_19__ := (Func("shell_44")).Call()
global __shell_module_21__ := (Func("shell_41")).Call()
global __shell_module_27__ := (Func("shell_38")).Call()
global __shell_module_52__ := (Func("shell_36")).Call()
global __shell_module_84__ := (Func("shell_34")).Call()
global __clone__ := __shell_module_15__
__join__ := __shell_module_10__
(Func("shell_32")).Call()
(Func("shell_31")).Call()
global __debounce__ := __shell_module_19__
__isFunction__ := __shell_module_4__
(Func("shell_30")).Call()
global __delay__ := __shell_module_21__
__isFunction__ := __shell_module_4__
(Func("shell_29")).Call()
__join__ := __shell_module_10__
global __keys__ := __shell_module_52__
(Func("shell_28")).Call()
global __shell_module_17__ := (Func("shell_27")).Call()
global __shell_module_20__ := (Func("shell_25")).Call()
global __shell_module_58__ := (Func("shell_22")).Call()
global __shell_module_59__ := (Func("shell_20")).Call()
global __concat__ := __shell_module_17__
__join__ := __shell_module_10__
(Func("shell_18")).Call()
global __defer__ := __shell_module_20__
__isFunction__ := __shell_module_4__
(Func("shell_17")).Call()
__defer__ := __shell_module_20__
global __emitter__ := __shell_module_27__
__isFunction__ := __shell_module_4__
__isObject__ := __shell_module_28__
__getType__ := __shell_module_29__
(Func("shell_16")).Call()
(Func("shell_15")).Call()
(Func("shell_11")).Call()
(Func("shell_5")).Call()
__join__ := __shell_module_10__
__keys__ := __shell_module_52__
global __mixin__ := __shell_module_58__
global __values__ := __shell_module_59__
(Func("shell_1")).Call()
shell_1() {
  mapA := {a: 1}
  mapB := {b: 2}
  mapC := {c: 3}
  __mixin__.Call(mapA, mapB, mapC)
  result := __join__.Call(__keys__.Call(mapA))
  if !(result == "a,b,c") {
    throw 1
  }
  result := __join__.Call(__values__.Call(mapA))
  if !(result == "1,2,3") {
    throw 2
  }
}
shell_2(map, emitter) {
  if !(map.a == 1) {
    throw "once - 2"
  }
  emitter.off.Call()
}
shell_3(map, emitter) {
  if !(map.a == 1) {
    throw "once - 1"
  }
  emitter.emit.Call("test")
  __defer__.Call(Func("shell_2").Bind(map, emitter))
}
shell_4(map) {
  return map.a++
}
shell_5() {
  emitter := __emitter__.Call()
  map := {a: 0}
  emitter.once.Call("test", Func("shell_4").Bind(map))
  emitter.emit.Call("test")
  __defer__.Call(Func("shell_3").Bind(map, emitter))
}
shell_6(map, emitter) {
  if !(map.a == 2) {
    throw "off with name/" . (map.a) . ""
  }
  emitter.off.Call()
}
shell_7(map, emitter) {
  if !(map.a == 2) {
    throw "on with name - 3/" . (map.a) . ""
  }
  emitter.off.Call("test.a")
  emitter.emit.Call("test.a")
  __defer__.Call(Func("shell_6").Bind(map, emitter))
}
shell_8(map, emitter) {
  if !(map.a == 2) {
    throw "on with name - 2/" . (map.a) . ""
  }
  emitter.emit.Call("test.b")
  __defer__.Call(Func("shell_7").Bind(map, emitter))
}
shell_9(map, emitter) {
  if !(map.a == 1) {
    throw "on with name - 1/" . (map.a) . ""
  }
  emitter.emit.Call("test.a")
  __defer__.Call(Func("shell_8").Bind(map, emitter))
}
shell_10(map) {
  return map.a++
}
shell_11() {
  emitter := __emitter__.Call()
  map := {a: 0}
  emitter.on.Call("test.a", Func("shell_10").Bind(map))
  emitter.emit.Call("test")
  __defer__.Call(Func("shell_9").Bind(map, emitter))
}
shell_12(map, emitter) {
  if !(map.a == 1) {
    throw "off"
  }
  emitter.off.Call()
}
shell_13(map, emitter) {
  if !(map.a == 1) {
    throw "on/" . (map.a) . ""
  }
  emitter.off.Call("test")
  emitter.emit.Call("test")
  __defer__.Call(Func("shell_12").Bind(map, emitter))
}
shell_14(map) {
  return map.a++
}
shell_15() {
  emitter := __emitter__.Call()
  map := {a: 0}
  emitter.on.Call("test", Func("shell_14").Bind(map))
  emitter.emit.Call("test")
  __defer__.Call(Func("shell_13").Bind(map, emitter))
}
shell_16() {
  if !(__isFunction__.Call(__emitter__)) {
    throw 0
  }
  emitter := __emitter__.Call()
  if !(__isObject__.Call(emitter)) {
    throw 1
  }
  for __index_for__, name in ["emit", "off", "on", "once"] {
    if !(__isFunction__.Call(emitter[__ci_shell__.Call(name)])) {
      throw "" . (name) . "/" . (__getType__.Call(emitter[__ci_shell__.Call(name)])) . ""
    }
  }
}
shell_17() {
  if !(__isFunction__.Call(__defer__)) {
    throw 0
  }
}
shell_18() {
  listA := __concat__.Call([1, 2, 3], 4, 5, [6, 7], 8, [9])
  if !((__join__.Call(listA, "")) == "123456789") {
    throw listA
  }
}
shell_19(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "object") {
    throw Exception("$.values: invalid type '" . (__type__) . "'")
  }
  __listResult__ := []
  for __index_for__, __key__ in __keys__.Call(ipt) {
    __push__.Call(__listResult__, ipt[__ci_shell__.Call(__key__)])
  }
  return __listResult__
}
shell_20() {
  __getType__ := __shell_module_29__
  __keys__ := __shell_module_52__
  __push__ := __shell_module_69__
  return Func("shell_19")
}
shell_21(__tail__, args*) {
  if !(__length__.Call(args)) {
    throw Exception("$.mixin: invalid arguments")
  }
  __result__ := args[1]
  for __index_for__, __item__ in __tail__.Call(args) {
    for __key__, __value__ in __item__ {
      __result__[__ci_shell__.Call(__key__)] := __value__
    }
  }
  return __result__
}
shell_22() {
  __length__ := __shell_module_25__
  __tail__ := __shell_module_84__
  return Func("shell_21").Bind(__tail__)
}
shell_23(callback, args) {
  return callback.Call(args*)
}
shell_24(callback, args*) {
  return __delay__.Call(Func("shell_23").Bind(callback, args), 1)
}
shell_25() {
  __delay__ := __shell_module_21__
  return Func("shell_24")
}
shell_26(list, args*) {
  __listNew__ := __clone__.Call(list)
  for __index_for__, __arg__ in args {
    if (__isArray__.Call(__arg__)) {
      for __index_for__, __item__ in __arg__ {
        __push__.Call(__listNew__, __item__)
      }
    } else {
      __push__.Call(__listNew__, __arg__)
    }
  }
  return __listNew__
}
shell_27() {
  __clone__ := __shell_module_15__
  __isArray__ := __shell_module_49__
  __push__ := __shell_module_69__
  return Func("shell_26")
}
shell_28() {
  map := {a: 1, b: 2, c: 3}
  result := __join__.Call(__keys__.Call(map))
  if !(result == "a,b,c") {
    throw 0
  }
  map2 := {0: "", 1: "a", 2: "b", 3: "c"}
  result := __join__.Call(__keys__.Call(map2))
  if !(result == "0,1,2,3") {
    throw result
  }
}
shell_29() {
  if !(__isFunction__.Call(__delay__)) {
    throw 0
  }
}
shell_30() {
  if !(__isFunction__.Call(__debounce__)) {
    throw 0
  }
}
shell_31() {
  map := {a: 1, b: 2, c: 3}
  mapA := __clone__.Call(map)
  if !((__join__.Call([mapA.a, mapA.b, mapA.c], "")) == "123") {
    throw mapA
  }
}
shell_32() {
  list := [1, 2, 3]
  listA := __clone__.Call(list)
  if !((__join__.Call(listA, "")) == "123") {
    throw (__join__.Call(listA, ""))
  }
}
shell_33(list) {
  return __drop__.Call(list, 1)
}
shell_34() {
  __drop__ := __shell_module_23__
  return Func("shell_33")
}
shell_35(__sort__, ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "object") {
    throw Exception("$.keys: invalid type '" . (__type__) . "'")
  }
  __listResult__ := []
  for __key__, __value__ in ipt {
    __push__.Call(__listResult__, __key__)
  }
  return __sort__.Call(__listResult__)
}
shell_36() {
  __getType__ := __shell_module_29__
  __push__ := __shell_module_69__
  __sort__ := __shell_module_83__
  return Func("shell_35").Bind(__sort__)
}
shell_37() {
  return new EmitterShell()
}
shell_38() {
  return Func("shell_37")
}
shell_39(callback, args) {
  return callback.Call(args*)
}
shell_40(__setTimeout__, callback, time, args*) {
  __timer__ := __setTimeout__.Call(Func("shell_39").Bind(callback, args), time)
  return __timer__
}
shell_41() {
  __setTimeout__ := __shell_module_80__
  return Func("shell_40").Bind(__setTimeout__)
}
shell_42(__tDebounce__, __setTimeout__, callback, time, index) {
  __clearTimeout__.Call(__tDebounce__[__ci_shell__.Call(index)])
  __tDebounce__[__ci_shell__.Call(index)] := __setTimeout__.Call(callback, time)
}
shell_43(__tDebounce__, __setTimeout__, time, callback) {
  __iDebounce__++
  return Func("shell_42").Bind(__tDebounce__, __setTimeout__, callback, time, __iDebounce__)
}
shell_44() {
  __clearTimeout__ := __shell_module_13__
  __setTimeout__ := __shell_module_80__
  __iDebounce__ := 0
  __tDebounce__ := {}
  return Func("shell_43").Bind(__tDebounce__, __setTimeout__)
}
shell_45(__slice__, ipt) {
  if (__isArray__.Call(ipt)) {
    return __slice__.Call(ipt)
  }
  if (__isObject__.Call(ipt)) {
    __mapNew__ := {}
    for __key__, __value__ in ipt {
      __mapNew__[__ci_shell__.Call(__key__)] := __value__
    }
    return __mapNew__
  }
  throw Exception("$.clone: invalid type '" . (__getType__.Call(ipt)) . "'")
}
shell_46() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  __isObject__ := __shell_module_28__
  __slice__ := __shell_module_79__
  return Func("shell_45").Bind(__slice__)
}
shell_47() {
  if !(__isFunction__.Call(__press__)) {
    throw Exception("__press__ is not a function")
  }
}
shell_48() {
  if !(__isFunction__.Call(__getState__)) {
    throw Exception("$.getState is not a function")
  }
}
shell_49() {
  if !(__isFunction__.Call(__exec__)) {
    throw "$.exec is not a function"
  }
}
shell_50() {
  mapA := {a: 1, b: 2}
  mapB := {a: 1, b: 2}
  if !(__eq__.Call(mapA, mapB)) {
    throw 0
  }
  mapC := {a: 1, b: 2, c: 3}
  if (__eq__.Call(mapA, mapC)) {
    throw 1
  }
}
shell_51() {
  listA := [1, 2]
  listB := [1, 2]
  if !(__eq__.Call(listA, listB)) {
    throw 0
  }
  listC := [1, 2, 3]
  if (__eq__.Call(listA, listC)) {
    throw 1
  }
}
shell_52() {
  stringA := "hello"
  stringB := "hello"
  if !(__eq__.Call(stringA, stringB)) {
    throw 0
  }
  stringC := "aloha"
  if (__eq__.Call(stringA, stringC)) {
    throw 1
  }
}
shell_53() {
  a := 1
  b := 1
  if !(__eq__.Call(a, b)) {
    throw 0
  }
  c := 2
  if (__eq__.Call(a, c)) {
    throw 1
  }
}
shell_54() {
  if !(__isFunction__.Call(__echo__)) {
    throw "$.echo is not a function"
  }
  message := "hello world"
  result := __echo__.Call(message)
  if !(result == message) {
    throw "$.echo did not return the expected value"
  }
}
shell_55() {
  list := [1, 2, 3, 4, 5]
  listA := __drop__.Call(list)
  result := __join__.Call(listA, "")
  if !(result == "2345") {
    throw result
  }
  listB := __drop__.Call(list, 3)
  result := __join__.Call(listB, "")
  if !(result == "45") {
    throw result
  }
}
shell_56() {
  list := [0, 1, false, true, "", "x"]
  listA := __compact__.Call(list)
  if !((__join__.Call(listA, "")) == "11x") {
    throw listA
  }
}
shell_57(list) {
  __string__ := __join__.Call(list, ",")
  Sort, __string__, C D,
  return __split__.Call(__string__, ",")
}
shell_58() {
  __join__ := __shell_module_10__
  __split__ := __shell_module_72__
  return Func("shell_57")
}
shell_59(this, key, callback) {
  __array__ := __split__.Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  __push__.Call(this.bus, [__type__, __name__, callback, 1])
  return
}
shell_60(this, key, callback) {
  __array__ := __split__.Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  __push__.Call(this.bus, [__type__, __name__, callback, 0])
  return
}
shell_61(__type__, __it__) {
  return __it__[1] != __type__
}
shell_62(__type__, __name__, __it__) {
  return !(__it__[1] == __type__ && __it__[2] == __name__)
}
shell_63(this, key) {
  __array__ := __split__.Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  if !(__type__) {
    this.bus := []
    return
  }
  if (__name__) {
    this.bus := __filter__.Call(this.bus, Func("shell_62").Bind(__type__, __name__))
  } else {
    this.bus := __filter__.Call(this.bus, Func("shell_61").Bind(__type__))
  }
  return
}
shell_64(__it__) {
  return __it__[4] != 2
}
shell_65(args, __it__) {
  __it__[3].Call(args*)
  if (__it__[4] == 1) {
    __it__[4] := 2
  }
  return
}
shell_66(__type__, __it__) {
  return __it__[1] == __type__
}
shell_67(__type__, __name__, __it__) {
  return __it__[1] == __type__ && __it__[2] == __name__
}
shell_68(this, key, args*) {
  __array__ := __split__.Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  if !(__type__) {
    return
  }
  if (__name__) {
    __list__ := __filter__.Call(this.bus, Func("shell_67").Bind(__type__, __name__))
  } else {
    __list__ := __filter__.Call(this.bus, Func("shell_66").Bind(__type__))
  }
  __each__.Call(__list__, Func("shell_65").Bind(args))
  this.bus := __filter__.Call(this.bus, Func("shell_64"))
  return
}
shell_69(callback, time) {
  callback := __bind__.Call(callback)
  if !(__isNumber__.Call(time)) {
    throw Exception("$.setTimeout: invalid type")
  }
  if (time < 1) {
    time := 1
  }
  SetTimer, % callback, % 0 - time
  return callback
}
shell_70() {
  __bind__ := __shell_module_6__
  __isNumber__ := __shell_module_50__
  return Func("shell_69")
}
shell_71(__reverse__, list, start := 0, end := 0) {
  if !(__getType__.Call(list)) {
    throw Exception("$.slice: invalid type '" . (__getType__.Call(list)) . "'")
  }
  __len__ := __length__.Call(list)
  if !(end) {
    end := __len__
  }
  if (start > __len__) {
    start := __len__
  }
  if (start < 0) {
    start := __len__ + start
  }
  if (end > __len__) {
    end := __len__
  }
  if (end < 0) {
    end := __len__ + end
  }
  __isReverse__ := false
  if (start > end) {
    __isReverse__ := true
    __array__ := [end, start]
    start := __array__[1]
    end := __array__[2]
  }
  __listNew__ := []
  __n__ := 0
  __max__ := end - start
  while (__n__ < __max__) {
    __push__.Call(__listNew__, list[__ci_shell__.Call(start + __n__)])
    __n__++
  }
  if (__isReverse__) {
    return __reverse__.Call(__listNew__)
  }
  return __listNew__
}
shell_72() {
  __getType__ := __shell_module_29__
  __length__ := __shell_module_25__
  __push__ := __shell_module_69__
  __reverse__ := __shell_module_85__
  return Func("shell_71").Bind(__reverse__)
}
shell_73(__validateInputPress__, __formatInputPress__, __trim__, listInput*) {
  if !(__validateInputPress__.Call(listInput)) {
    return
  }
  __listKey__ := __formatInputPress__.Call(listInput)
  __listResult__ := []
  __len__ := __length__.Call(__listKey__)
  for __i__, __key__ in __listKey__ {
    __i__ := __i__ - 1
    if (__i__ == __len__ - 1) {
      __listResult__[__ci_shell__.Call(__i__)] := __split__.Call(__key__, ":")
      continue
    }
    if (__includes__.Call(__key__, ":")) {
      __listResult__[__ci_shell__.Call(__i__)] := __split__.Call(__key__, ":")
      __listResult__[__ci_shell__.Call((__len__ - 1) * 2 - __i__)] := __split__.Call(__key__, ":")
    } else {
      __listResult__[__ci_shell__.Call(__i__)] := [__key__, "down"]
      __listResult__[__ci_shell__.Call((__len__ - 1) * 2 - __i__)] := [__key__, "up"]
    }
  }
  for __i__, __it__ in __listResult__ {
    __i__ := __i__ - 1
    if (__it__[1] == "win") {
      __it__[1] := "lwin"
    }
    __listResult__[__ci_shell__.Call(__i__)] := __trim__.Call("" . (__it__[1]) . " " . (__it__[2]) . "")
  }
  __result__ := ""
  for __index_for__, __it__ in __listResult__ {
    __result__ := "" . (__result__) . "{" . (__it__) . "}"
  }
  Send, % __result__
  return
}
shell_74(listInput) {
  if !(__length__.Call(listInput)) {
    return false
  }
  __key__ := listInput[1]
  if (__includes__.Call(__key__, "-button")) {
    __key__ := __replace__.Call(__key__, "l-button", "left")
    __key__ := __replace__.Call(__key__, "m-button", "middle")
    __key__ := __replace__.Call(__key__, "r-button", "right")
    __click__.Call(__key__)
    return false
  }
  return true
}
shell_75(__toLowerCase__, listInput) {
  __listKey__ := []
  for __index_for__, __input__ in listInput {
    __ipt__ := __toLowerCase__.Call(__input__)
    __ipt__ := __replace__.Call(__ipt__, " ", "")
    __ipt__ := __replace__.Call(__ipt__, "-", "")
    __push__.Call(__listKey__, (__split__.Call(__ipt__, "+"))*)
  }
  return __listKey__
}
shell_76() {
  __click__ := __shell_module_14__
  __includes__ := __shell_module_48__
  __length__ := __shell_module_25__
  __push__ := __shell_module_69__
  __replace__ := __shell_module_70__
  __split__ := __shell_module_72__
  __toLowerCase__ := __shell_module_81__
  __trim__ := __shell_module_82__
  __formatInputPress__ := Func("shell_75").Bind(__toLowerCase__)
  __validateInputPress__ := Func("shell_74")
  return Func("shell_73").Bind(__validateInputPress__, __formatInputPress__, __trim__)
}
shell_77(key) {
  key := __formatHotkey__.Call(key)
  return GetKeyState(key, "P")
}
shell_78() {
  __formatHotkey__ := __shell_module_39__
  return Func("shell_77")
}
shell_79(__input__, __callback__) {
  if (__isString__.Call(__input__)) {
    __input__ := [__input__]
  }
  __input__ := __join__.Call(__input__, " && ")
  RunWait, %comSpec% /c %__input__%,, Hide UseErrorLevel
  __callback__.Call(ErrorLevel)
}
shell_80() {
  __isString__ := __shell_module_51__
  __join__ := __shell_module_10__
  __noop__ := __shell_module_61__
  return Func("shell_79").Bind(__noop__)
}
shell_81(value, other) {
  __typeA__ := __getType__.Call(value)
  __typeB__ := __getType__.Call(other)
  if !(__typeA__ == __typeB__) {
    return false
  }
  if (__includes__.Call(["function", "number", "string"], __typeA__)) {
    return value == other
  }
  __lengthA__ := __length__.Call(value)
  __lengthB__ := __length__.Call(other)
  if !(__lengthA__ == __lengthB__) {
    return false
  }
  if (__isArray__.Call(value)) {
    for __i__, __it__ in value {
      __i__ := __i__ - 1
      if !(__eq__.Call(__it__, other[__ci_shell__.Call(__i__)])) {
        return false
      }
    }
    return true
  }
  if (__isObject__.Call(value)) {
    for __k__, __v__ in value {
      if !(__eq__.Call(__v__, other[__ci_shell__.Call(__k__)])) {
        return false
      }
    }
    return true
  }
  throw Exception("$.eq: invalid type '" . (__typeA__) . "'")
}
shell_82() {
  __getType__ := __shell_module_29__
  __includes__ := __shell_module_48__
  __isArray__ := __shell_module_49__
  __isObject__ := __shell_module_28__
  __length__ := __shell_module_25__
  __eq__ := Func("shell_81")
  return __eq__
}
shell_83(__toString__, message) {
  __tip__.Call("[" . (__now__.Call()) . "] " . (__toString__.Call(message)) . "", [0, 0])
  return message
}
shell_84() {
  __now__ := __shell_module_62__
  __tip__ := __shell_module_75__
  __toString__ := __shell_module_78__
  return Func("shell_83").Bind(__toString__)
}
shell_85(n, _it, i) {
  return i >= n
}
shell_86(list, n := 1) {
  return __filter__.Call(list, Func("shell_85").Bind(n))
}
shell_87() {
  __filter__ := __shell_module_34__
  return Func("shell_86")
}
shell_88(it) {
  return !!it
}
shell_89(list) {
  return __filter__.Call(list, Func("shell_88"))
}
shell_90() {
  __filter__ := __shell_module_34__
  return Func("shell_89")
}
shell_91() {
  if !(__isFunction__.Call(__tip__)) {
    throw "$.tip is not a function"
  }
  message := "hello world"
  result := __tip__.Call(message)
  if !(result == message) {
    throw "$.tip did not return the expected value: " . (result) . ""
  }
}
shell_92() {
  list := [0, 1, 2, 3]
  n := __nth__.Call(list, 0)
  if !(n == 0) {
    throw n
  }
  n := __nth__.Call(list, 1)
  if !(n == 1) {
    throw n
  }
  n := __nth__.Call(list, -1)
  if !(n == 3) {
    throw n
  }
}
shell_93() {
  __move__.Call([100, 100])
  __array__ := __getPosition__.Call()
  x := __array__[1]
  y := __array__[2]
  if !(x == 100 && y == 100) {
    throw __join__.Call([x, y], ", ")
  }
  __sleep__.Call(1000)
}
shell_94(n) {
  return n + 1
}
shell_95() {
  list := [1, 2, 3]
  result := __join__.Call(__map__.Call(list, Func("shell_94")))
  if !(result == "2,3,4") {
    throw 0
  }
}
shell_96() {
  list := [1, 2, 3]
  item := __last__.Call(list)
  if !(item == 3) {
    throw 0
  }
}
shell_97() {
  list := [1, 2, 3, 4, 5]
  result := __join__.Call(list)
  if !(result == "1,2,3,4,5") {
    throw 1
  }
  result := __join__.Call(list, "")
  if !(result == "12345") {
    throw 2
  }
}
shell_98() {
  list := [1, 2, 3]
  result := __includes__.Call(list, 1)
  if !(result) {
    throw 3
  }
  result := __includes__.Call(list, 4)
  if (result) {
    throw 4
  }
}
shell_99() {
  string := "string"
  result := __includes__.Call(string, "s")
  if !(result) {
    throw 1
  }
  result := __includes__.Call(string, "a")
  if (result) {
    throw 2
  }
}
shell_100() {
  if !(__isFunction__.Call(__getPosition__)) {
    throw Exception("__getPosition__ is not a function")
  }
  __move__.Call([100, 100])
  __array__ := __getPosition__.Call()
  x := __array__[1]
  y := __array__[2]
  if !(x == 100 && y == 100) {
    throw __join__.Call([x, y], ", ")
  }
  __sleep__.Call(1000)
}
shell_101() {
  key := "alt + ctrl + shift + win + esc"
  result := __formatHotkey__.Call(key)
  if !(result == "!^+#esc") {
    throw result
  }
}
shell_102() {
  key := "win + r"
  result := __formatHotkey__.Call(key)
  if !(result == "#r") {
    throw result
  }
}
shell_103() {
  key := "shift + a"
  result := __formatHotkey__.Call(key)
  if !(result == "+a") {
    throw result
  }
}
shell_104() {
  key := "ctrl + f5"
  result := __formatHotkey__.Call(key)
  if !(result == "^f5") {
    throw result
  }
}
shell_105() {
  key := "alt + f4"
  result := __formatHotkey__.Call(key)
  if !(result == "!f4") {
    throw result
  }
}
shell_106(it) {
  return it != 2
}
shell_107() {
  list := [1, 2, 3]
  listA := __filter__.Call(list, Func("shell_106"))
  if !((__join__.Call(listA, "")) == "13") {
    throw 0
  }
}
shell_108(listA, length, it, i) {
  return listA[__ci_shell__.Call(length - i)] := it
}
shell_109() {
  list := [1, 2, 3, 4]
  listA := []
  length := __length__.Call(list)
  __each__.Call(list, Func("shell_108").Bind(listA, length))
  string := __join__.Call(list)
  if !(string := "4321") {
    throw string
  }
}
shell_110(it) {
  return __join__.Call(it, "")
}
shell_111() {
  list := [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  listA := __chunk__.Call(list, 4)
  string := __join__.Call((__map__.Call(listA, Func("shell_110"))), ",")
  if !(string == "1234,5678,910") {
    throw string
  }
}
shell_112() {
  if !(__isFunction__.Call(__bind__)) {
    throw 0
  }
}
shell_113(list) {
  __len__ := __length__.Call(list)
  __listNew__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    __listNew__[__ci_shell__.Call(__len__ - 1 - __i__)] := __item__
  }
  for __i__, __item__ in __listNew__ {
    __i__ := __i__ - 1
    list[__ci_shell__.Call(__i__)] := __item__
  }
  return list
}
shell_114() {
  __length__ := __shell_module_25__
  return Func("shell_113")
}
shell_115(__toString__, message, p := "") {
  if !(message) {
    return message
  }
  if !(p) {
    p := __getPosition__.Call()
  }
  __msg__ := __toString__.Call(message)
  __noop__.Call(__msg__)
  ToolTip, % __msg__, % p[1], % p[2]
  return message
}
shell_116() {
  __getPosition__ := __shell_module_42__
  __noop__ := __shell_module_61__
  __toString__ := __shell_module_78__
  return Func("shell_115").Bind(__toString__)
}
shell_117(list, n := 0) {
  if (n >= 0) {
    return list[__ci_shell__.Call(n)]
  } else {
    return list[__ci_shell__.Call((__length__.Call(list)) + n)]
  }
}
shell_118() {
  __length__ := __shell_module_25__
  return Func("shell_117")
}
shell_119(list) {
  return list[__ci_shell__.Call((__length__.Call(list)) - 1)]
}
shell_120() {
  __length__ := __shell_module_25__
  return Func("shell_119")
}
shell_121(__toString__, ipt, needle) {
  __type__ := __getType__.Call(ipt)
  if ((__isString__.Call(ipt)) || __isNumber__.Call(ipt)) {
    if !(__isString__.Call(needle)) {
      return false
    }
    return (InStr((__toString__.Call(ipt)), needle)) > 0
  }
  if (__isArray__.Call(ipt)) {
    for __index_for__, __it__ in ipt {
      if (__it__ == needle) {
        return true
      }
    }
    return false
  }
  throw Exception("$.includes: invalid type '" . (__type__) . "'")
}
shell_122() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  __isNumber__ := __shell_module_50__
  __isString__ := __shell_module_51__
  __toString__ := __shell_module_78__
  return Func("shell_121").Bind(__toString__)
}
shell_123(__formatKeyFormatHotkey__, __pickPrefixFormatHotkey__, __trim__, key) {
  __listKey__ := __formatKeyFormatHotkey__.Call(key)
  __array__ := __pickPrefixFormatHotkey__.Call(__listKey__)
  __prefix__ := __array__[1]
  __listKey__ := __array__[2]
  __result__ := ""
  for __index_for__, __it__ in __listKey__ {
    __result__ := "" . (__result__) . " & " . (__it__) . ""
  }
  return __replace__.Call("" . (__prefix__) . "" . (__trim__.Call(__result__, " &")) . "", ":", " ")
}
shell_124(listKey) {
  if ((__length__.Call(listKey)) == 1) {
    return ["", listKey]
  }
  __prefix__ := ""
  __listNew__ := []
  for __index_for__, __key__ in listKey {
    if (__key__ == "alt") {
      __prefix__ := "" . (__prefix__) . "!"
      continue
    }
    if (__key__ == "ctrl") {
      __prefix__ := "" . (__prefix__) . "^"
      continue
    }
    if (__key__ == "shift") {
      __prefix__ := "" . (__prefix__) . "+"
      continue
    }
    if (__key__ == "win") {
      __prefix__ := "" . (__prefix__) . "#"
      continue
    }
    __push__.Call(__listNew__, __key__)
  }
  return [__prefix__, __listNew__]
}
shell_125(__toLowerCase__, key) {
  __listKey__ := []
  __key__ := __toLowerCase__.Call(key)
  __key__ := __replace__.Call(__key__, " ", "")
  __key__ := __replace__.Call(__key__, "-", "")
  __listSplit__ := __split__.Call(__key__, "+")
  if (__length__.Call(__listSplit__)) {
    __push__.Call(__listKey__, __listSplit__*)
  }
  return __listKey__
}
shell_126() {
  __length__ := __shell_module_25__
  __push__ := __shell_module_69__
  __replace__ := __shell_module_70__
  __split__ := __shell_module_72__
  __toLowerCase__ := __shell_module_81__
  __trim__ := __shell_module_82__
  __formatKeyFormatHotkey__ := Func("shell_125").Bind(__toLowerCase__)
  __pickPrefixFormatHotkey__ := Func("shell_124")
  return Func("shell_123").Bind(__formatKeyFormatHotkey__, __pickPrefixFormatHotkey__, __trim__)
}
shell_127(list, callback) {
  __listResult__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    if !(callback.Call(__item__, __i__)) {
      continue
    }
    __push__.Call(__listResult__, __item__)
  }
  return __listResult__
}
shell_128() {
  __push__ := __shell_module_69__
  return Func("shell_127")
}
shell_129(list, callback) {
  __listResult__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    __push__.Call(__listResult__, callback.Call(__item__, __i__))
  }
  return __listResult__
}
shell_130() {
  __push__ := __shell_module_69__
  return Func("shell_129")
}
shell_131(__toString__, list, seperator := ",") {
  __result__ := ""
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    if !(__i__) {
      __result__ := __toString__.Call(__item__)
      continue
    }
    __result__ := "" . (__result__) . "" . (seperator) . "" . (__item__) . ""
  }
  return __result__
}
shell_132() {
  __toString__ := __shell_module_78__
  return Func("shell_131").Bind(__toString__)
}
shell_133(list, n := 1) {
  __listNew__ := []
  __len__ := __length__.Call(list)
  __i__ := 0
  while (__i__ < __len__ / n) {
    __listTemp__ := []
    __j__ := 0
    while (__j__ < n) {
      __index__ := __i__ * n + __j__
      if !(__index__ < __len__) {
        break
      }
      __push__.Call(__listTemp__, list[__ci_shell__.Call(__index__)])
      __j__++
    }
    __push__.Call(__listNew__, __listTemp__)
    __i__++
  }
  return __listNew__
}
shell_134() {
  __length__ := __shell_module_25__
  __push__ := __shell_module_69__
  return Func("shell_133")
}
shell_135(callback, args*) {
  if !(callback.Name) {
    if !(__length__.Call(args)) {
      return callback
    }
    throw Exception("$.bind: cannot bind a bound function")
  }
  return callback.Bind(args*)
}
shell_136() {
  __length__ := __shell_module_25__
  return Func("shell_135")
}
shell_137() {
  list := [0]
  __unshift__.Call(list, 1)
  if !(list[1] == 1) {
    throw 0
  }
  len := __unshift__.Call(list, 2, 3, 4)
  if !(len == 5) {
    throw 1
  }
  if !(list[1] == 2) {
    throw 2
  }
  if !(list[4] == 1) {
    throw 3
  }
}
shell_138() {
  result := __split__.Call("test", ",")
  if !((__length__.Call(result)) == 1) {
    throw result
  }
  if !(result[1] == "test") {
    throw result
  }
}
shell_139() {
  result := __split__.Call("a,b,c", ",")
  if !((__length__.Call(result)) == 3) {
    throw result
  }
  if !(result[1] == "a" && result[2] == "b" && result[3] == "c") {
    throw result
  }
}
shell_140() {
  list := [0, 1, 2]
  first := __shift__.Call(list)
  if !(first == 0) {
    throw 0
  }
  if !(list[1] == 1 && list[2] == 2) {
    throw 1
  }
}
shell_141() {
  list := [0]
  __push__.Call(list, 1)
  if !(list[2] == 1) {
    throw 0
  }
  len := __push__.Call(list, 2, 3, 4)
  if !(len == 5) {
    throw 1
  }
  if !(list[3] == 2) {
    throw 2
  }
  if !(list[5] == 4) {
    throw 3
  }
}
shell_142() {
  list := [0, 1, 2]
  last := __pop__.Call(list)
  if !(last == 2) {
    throw 0
  }
  if !(list[1] == 0 && list[2] == 1) {
    throw 1
  }
}
shell_143() {
  string := "wow"
  n := __length__.Call(string)
  if !(n == 3) {
    throw 3
  }
}
shell_144() {
  map := {a: 1, b: 2, c: 3}
  n := __length__.Call(map)
  if !(n == 3) {
    throw 2
  }
}
shell_145() {
  list := [1, 2, 3]
  n := __length__.Call(list)
  if !(n == 3) {
    throw 1
  }
}
shell_146() {
  f := __file__.Call("test.txt")
  text := "hello world"
  f.remove.Call()
  if (f.isExists.Call()) {
    throw "test.txt should not exist - 1"
  }
  f.write.Call(text)
  if !(f.isExists.Call()) {
    throw "test.txt should exist"
  }
  content := f.read.Call()
  if !(content == text) {
    throw "content is not correct"
  }
  f.remove.Call()
  if (f.isExists.Call()) {
    throw "test.txt should not exist - 2"
  }
}
shell_147() {
  if !(__isFunction__.Call(__file__)) {
    throw "__file__ is not a function"
  }
  f := __file__.Call("test.txt")
  if !(__isObject__.Call(f)) {
    throw "__file__() does not return an object"
  }
  for __index_for__, fn in ["append", "isExists", "read", "remove", "write"] {
    if !(__isFunction__.Call(f[__ci_shell__.Call(fn)])) {
      throw "__file__() does not return an object with function " . (fn) . ""
    }
  }
}
shell_148(__toString__, __trim__, ipt) {
  if (__isString__.Call(ipt)) {
    return ipt
  }
  if (__isNumber__.Call(ipt)) {
    return ipt
  }
  if (__isArray__.Call(ipt)) {
    __result__ := ""
    for __index_for__, key in ipt {
      __result__ := "" . (__result__) . ", " . (__toString__.Call(key)) . ""
    }
    return "[" . (__trim__.Call(__result__, " ,")) . "]"
  }
  if (__isObject__.Call(ipt)) {
    __result__ := ""
    for key, value in ipt {
      __result__ := "" . (__result__) . ", " . (key) . ": " . (__toString__.Call(value)) . ""
    }
    return "{" . (__trim__.Call(__result__, " ,")) . "}"
  }
  throw Exception("__toString__: invalid type '" . (__getType__.Call(ipt)) . "'")
}
shell_149() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  __isNumber__ := __shell_module_50__
  __isObject__ := __shell_module_28__
  __isString__ := __shell_module_51__
  __trim__ := __shell_module_82__
  __toString__ := Func("shell_148").Bind(__toString__, __trim__)
  return __toString__
}
shell_150(list, args*) {
  if !(__isArray__.Call(list)) {
    throw Exception("$.unshift: invalid type '" . (__getType__.Call(list)) . "'")
  }
  list.InsertAt(1, args*)
  return list.Length()
}
shell_151() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  return Func("shell_150")
}
shell_152(list) {
  if !(__isArray__.Call(list)) {
    throw Exception("$.shift: invalid type '" . (__getType__.Call(list)) . "'")
  }
  __first__ := list[1]
  list.RemoveAt(1)
  return __first__
}
shell_153() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  return Func("shell_152")
}
shell_154(list, value*) {
  if !(__isArray__.Call(list)) {
    throw Exception("$.push: invalid type '" . (__getType__.Call(list)) . "'")
  }
  for __index_for__, __v__ in value {
    list.Push(__v__)
  }
  return list.Length()
}
shell_155() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  return Func("shell_154")
}
shell_156(list) {
  if !(__isArray__.Call(list)) {
    throw Exception("$.pop: invalid type '" . (__getType__.Call(list)) . "'")
  }
  return list.Pop()
}
shell_157() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  return Func("shell_156")
}
shell_158(source) {
  return new FileShell(source)
}
shell_159() {
  return Func("shell_158")
}
shell_160(ipt) {
  if (__isArray__.Call(ipt)) {
    return ipt.Length()
  }
  if (__isObject__.Call(ipt)) {
    return ipt.Count()
  }
  if (__isString__.Call(ipt)) {
    return StrLen(ipt)
  }
  throw Exception("$.length: invalid type '" . (__getType__.Call(ipt)) . "'")
}
shell_161() {
  __getType__ := __shell_module_29__
  __isArray__ := __shell_module_49__
  __isObject__ := __shell_module_28__
  __isString__ := __shell_module_51__
  return Func("shell_160")
}
shell_162() {
  if !(__isString__.Call(__version__)) {
    throw Exception("$.VERSION is not a string")
  }
}
shell_163() {
  string := "string"
  result := __subString__.Call(string, 0)
  if !(result == string) {
    throw result
  }
  result := __subString__.Call(string, 1)
  if !(result == "tring") {
    throw result
  }
  result := __subString__.Call(string, 1, 2)
  if !(result == "t") {
    throw result
  }
  result := __subString__.Call(string, 3, 5)
  if !(result == "in") {
    throw result
  }
}
shell_164() {
  if !(__isFunction__.Call(__play__)) {
    throw Exception("__play__ is not a function")
  }
}
shell_165() {
  if !(__isFunction__.Call(__open__)) {
    throw "$.open is not a function"
  }
}
shell_166() {
  now := __now__.Call()
  if !(__isNumber__.Call(now)) {
    throw 0
  }
}
shell_167() {
  if !(__isFunction__.Call(__noop__)) {
    throw 0
  }
}
shell_168() {
  if !(__isFunction__.Call(__min__)) {
    throw "$.min is not a function"
  }
  result := __min__.Call([1, 2, 3])
  if !(result == 1) {
    throw "$.min() does not return the correct result"
  }
}
shell_169() {
  if !(__isFunction__.Call(__max__)) {
    throw "$.max is not a function"
  }
  result := __max__.Call([1, 2, 3])
  if !(result == 3) {
    throw "$.max() does not return the correct result"
  }
}
shell_170() {
  string := "aloha"
  result := __isString__.Call(string)
  if !(result) {
    throw 1
  }
}
shell_171() {
  map := {a: 1}
  result := __isObject__.Call(map)
  if !(result) {
    throw 1
  }
}
shell_172() {
  n := 1
  result := __isNumber__.Call(n)
  if !(result) {
    throw 1
  }
}
shell_173() {
  return ""
}
shell_174() {
  fn := Func("shell_173")
  result := __isFunction__.Call(fn)
  if !(result) {
    throw 1
  }
}
shell_175() {
  list := []
  result := __isArray__.Call(list)
  if !(list) {
    throw 1
  }
  list := [1, 2, 3]
  result := __isArray__.Call(list)
  if !(result) {
    throw 2
  }
}
shell_176() {
  if !(__isFunction__.Call(__getColor__)) {
    throw Exception("$.getColor is not a function")
  }
}
shell_177() {
  if !(__isFunction__.Call(__get__)) {
    throw Exception("$.get is not a function")
  }
}
shell_178() {
  if !(__isFunction__.Call(__findImage__)) {
    throw 0
  }
}
shell_179() {
  if !(__isFunction__.Call(__findColor__)) {
    throw 0
  }
}
shell_180() {
  if !(__isFunction__.Call(__exit__)) {
    throw 0
  }
}
shell_181() {
  if !(__isFunction__.Call(__confirm__)) {
    throw 0
  }
}
shell_182() {
  if !(__isFunction__.Call(__click__)) {
    throw Exception("$.click is not a function")
  }
}
shell_183() {
  if !(__isFunction__.Call(__clearTimeout__)) {
    throw Exception("$.clearTimeout is not a function")
  }
}
shell_184() {
  if !(__isFunction__.Call(__clearInterval__)) {
    throw Exception("$.clearInterval is not a function")
  }
}
shell_185() {
  if !(__isFunction__.Call(__blockInput__)) {
    throw 0
  }
}
shell_186() {
  if !(__isFunction__.Call(__beep__)) {
    throw 0
  }
}
shell_187() {
  if !(__isFunction__.Call(__alert__)) {
    throw 0
  }
}
shell_188(this, content) {
  this.remove.Call()
  this.append.Call(content)
  return
}
shell_189(this) {
  if !(this.isExists.Call()) {
    return
  }
  FileDelete, % this.source
  return
}
shell_190(this) {
  if !(this.isExists.Call()) {
    return ""
  }
  __result__ := ""
  FileRead, __result__, % this.source
  return __replace__.Call(__result__, "`r", "")
}
shell_191(this) {
  return FileExist(this.source)
}
shell_192(this, content) {
  __noop__.Call(content)
  FileAppend, % content, % this.source, UTF-8
  return
}
shell_193(text, iStart, iEnd := 0) {
  __type__ := __getType__.Call(text)
  if !(__type__ == "string") {
    throw Exception("$.subString: invalid type '" . (__type__) . "'")
  }
  if (iEnd) {
    __len__ := iEnd - iStart
  } else {
    __len__ := 0
  }
  if !(__len__) {
    return SubStr(text, iStart + 1)
  } else {
    return SubStr(text, iStart + 1, __len__)
  }
}
shell_194() {
  __getType__ := __shell_module_29__
  return Func("shell_193")
}
shell_195(filename) {
  __noop__.Call(filename)
  SoundPlay, % filename
  return
}
shell_196() {
  __noop__ := __shell_module_61__
  return Func("shell_195")
}
shell_197(source) {
  __noop__.Call(source)
  Run, % source
  return
}
shell_198() {
  __noop__ := __shell_module_61__
  return Func("shell_197")
}
shell_199(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "string") {
    return false
  }
  return true
}
shell_200() {
  __getType__ := __shell_module_29__
  return Func("shell_199")
}
shell_201(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "number") {
    return false
  }
  return true
}
shell_202() {
  __getType__ := __shell_module_29__
  return Func("shell_201")
}
shell_203(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "array") {
    return false
  }
  return true
}
shell_204() {
  __getType__ := __shell_module_29__
  return Func("shell_203")
}
shell_205(p := "", speed := 0) {
  if !(p) {
    return
  }
  __noop__.Call(speed)
  MouseMove, p[1], p[2], speed
  return
}
shell_206() {
  __noop__ := __shell_module_61__
  return Func("shell_205")
}
shell_207(p := "") {
  if !(p) {
    p := __getPosition__.Call()
  }
  __result__ := 0
  PixelGetColor, __result__, % p[1], % p[2], RGB
  return __result__
}
shell_208() {
  __getPosition__ := __shell_module_42__
  return Func("shell_207")
}
shell_209(source, start, end) {
  if !(start) {
    start := [0, 0]
  }
  if !(end) {
    end := [A_ScreenWidth, A_ScreenHeight]
  }
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  __noop__.Call(source)
  ImageSearch __x__, __y__, start[1], start[2], end[1], end[2], % A_ScriptDir . "\\\" . source
  return [__x__, __y__]
}
shell_210() {
  __noop__ := __shell_module_61__
  return Func("shell_209")
}
shell_211(color, start, end, variation := 0) {
  if !(start) {
    start := [0, 0]
  }
  if !(end) {
    end := [A_ScreenWidth, A_ScreenHeight]
  }
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  __noop__.Call(color, variation)
  PixelSearch __x__, __y__, start[1], start[2], end[1], end[2], color, variation, Fast RGB
  return [__x__, __y__]
}
shell_212() {
  __noop__ := __shell_module_61__
  return Func("shell_211")
}
shell_213(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "object") {
    return false
  }
  return true
}
shell_214() {
  __getType__ := __shell_module_29__
  return Func("shell_213")
}
shell_215(text, callback) {
  __noop__.Call(text, callback)
  MsgBox, 0x4,, % text
  IfMsgBox Yes
    callback.Call(true)
  else
    callback.Call(false)
  return
}
shell_216() {
  __noop__ := __shell_module_61__
  return Func("shell_215")
}
shell_217(key := "left") {
  key := __replace__.Call(key, "-", "")
  key := __replace__.Call(key, ":", " ")
  Click, % key
  return
}
shell_218() {
  __replace__ := __shell_module_70__
  return Func("shell_217")
}
shell_219(ipt) {
  __type__ := __getType__.Call(ipt)
  if !(__type__ == "function") {
    return false
  }
  return true
}
shell_220() {
  __getType__ := __shell_module_29__
  return Func("shell_219")
}
shell_221(message) {
  __noop__.Call(message)
  MsgBox, % message
  return
}
shell_222() {
  __noop__ := __shell_module_61__
  return Func("shell_221")
}
shell_223() {
  string := "string"
  result := __startsWith__.Call(string, "s")
  if !(result) {
    throw 1
  }
  result := __startsWith__.Call(string, "t")
  if (result) {
    throw 2
  }
}
shell_224() {
  a := "alt + f4"
  b := __replace__.Call(a, " ", "")
  if !(b == "alt+f4") {
    throw b
  }
}
shell_225() {
  a := " 123 "
  b := __replace__.Call(a, " ", "")
  if !(b == "123") {
    throw b
  }
}
shell_226(map) {
  return map.n += 1
}
shell_227() {
  map := {n: 0}
  add := __once__.Call(Func("shell_226").Bind(map))
  add.Call()
  if !(map.n == 1) {
    throw 0
  }
  add.Call()
  if !(map.n == 1) {
    throw 1
  }
}
shell_228() {
  n := __mod__.Call(5, 2)
  if !(n == 1) {
    throw n
  }
  n := __mod__.Call(7, 5)
  if !(n == 2) {
    throw n
  }
}
shell_229() {
  result := __lte__.Call(1, 2)
  if !(result) {
    throw 0
  }
  result := __lte__.Call(2, 1)
  if (result) {
    throw 1
  }
  result := __lte__.Call(1, 1)
  if !(result) {
    throw 2
  }
}
shell_230() {
  result := __lt__.Call(1, 2)
  if !(result) {
    throw 0
  }
  result := __lt__.Call(2, 1)
  if (result) {
    throw 1
  }
  result := __lt__.Call(1, 1)
  if (result) {
    throw 2
  }
}
shell_231() {
  result := __gte__.Call(2, 1)
  if !(result) {
    throw 0
  }
  result := __gte__.Call(1, 2)
  if (result) {
    throw 1
  }
  result := __gte__.Call(1, 1)
  if !(result) {
    throw 2
  }
}
shell_232() {
  result := __gt__.Call(2, 1)
  if !(result) {
    throw 0
  }
  result := __gt__.Call(1, 2)
  if (result) {
    throw 1
  }
  result := __gt__.Call(1, 1)
  if (result) {
    throw 2
  }
}
shell_233() {
  type := __getType__.Call(42)
  if !(type == "number") {
    throw Exception(type)
  }
  type := __getType__.Call(__getType__)
  if !(type == "function") {
    throw Exception(type)
  }
  type := __getType__.Call([1, 2, 3])
  if !(type == "array") {
    throw Exception(type)
  }
  type := __getType__.Call({a: 1, b: 2, c: 3})
  if !(type == "object") {
    throw Exception(type)
  }
  type := __getType__.Call({0: ""})
  if !(type == "object") {
    throw Exception(type)
  }
  type := __getType__.Call({0: "", 1: "a", 2: "b", 3: "c"})
  if !(type == "object") {
    throw Exception(type)
  }
}
shell_234() {
  n := 1.2
  result := __floor__.Call(n)
  if !(result == 1) {
    throw result
  }
  n := -1.2
  result := __floor__.Call(n)
  if !(result == -2) {
    throw result
  }
}
shell_235() {
  list := [1, 2, 3]
  n := __first__.Call(list)
  if !(n == 1) {
    throw n
  }
}
shell_236() {
  a := {a: 1, b: 2}
  __delete__.Call(a, "a", "b")
  if !(a.a == "" && a.b == "") {
    throw 0
  }
}
shell_237() {
  a := {a: 1, b: 2}
  __delete__.Call(a, "a")
  if !(a.a == "") {
    throw 0
  }
}
shell_238() {
  n := 1.2
  result := __ceil__.Call(n)
  if !(result == 2) {
    throw 0
  }
  n := -1.2
  result := __ceil__.Call(n)
  if !(result == -1) {
    throw 1
  }
}
shell_239() {
  a := 1
  b := 2
  c := 3
  d := -4
  result := __add__.Call(a)
  if !(result == 1) {
    throw result
  }
  result := __add__.Call(a, b, c)
  if !(result == 6) {
    throw result
  }
  result := __add__.Call(a, b, c, d)
  if !(result == 2) {
    throw result
  }
}
shell_240() {
  n := 42
  result := __abs__.Call(n)
  if !(result == 42) {
    throw result
  }
  n := -42
  result := __abs__.Call(n)
  if !(result == 42) {
    throw result
  }
}
shell_241(ipt, omitting := " `t") {
  return Trim(ipt, omitting)
}
shell_242() {
  return Func("shell_241")
}
shell_243(ipt) {
  __result__ := ipt
  StringLower, __result__, ipt
  return __result__
}
shell_244() {
  return Func("shell_243")
}
shell_245() {
  return "0.0.26"
}
shell_246(text, string) {
  return (InStr(text, string)) == 1
}
shell_247() {
  return Func("shell_246")
}
shell_248(ipt, delimiter) {
  return StrSplit(ipt, delimiter)
}
shell_249() {
  return Func("shell_248")
}
shell_250(ipt, searchment, replacement, limit := -1) {
  return StrReplace(ipt, searchment, replacement, limit)
}
shell_251() {
  return Func("shell_250")
}
shell_252(__cacheOnce__, __i__, callback, args*) {
  if (__cacheOnce__[__ci_shell__.Call(__i__)][1]) {
    return __cacheOnce__[__ci_shell__.Call(__i__)][2]
  }
  __result__ := callback.Call(args*)
  __cacheOnce__[__ci_shell__.Call(__i__)] := [true, __result__]
  return __result__
}
shell_253(__indexOnce__, __cacheOnce__, callback) {
  __i__ := __indexOnce__
  __indexOnce__++
  __cacheOnce__[__ci_shell__.Call(__i__)] := [false, ""]
  return Func("shell_252").Bind(__cacheOnce__, __i__, callback)
}
shell_254() {
  __cacheOnce__ := {}
  __indexOnce__ := 0
  return Func("shell_253").Bind(__indexOnce__, __cacheOnce__)
}
shell_255() {
  return A_TickCount
}
shell_256() {
  return Func("shell_255")
}
shell_257(args*) {
  return
}
shell_258() {
  return Func("shell_257")
}
shell_259(dividend, divisor) {
  return Mod(dividend, divisor)
}
shell_260() {
  return Func("shell_259")
}
shell_261(list) {
  return Min(list*)
}
shell_262() {
  return Func("shell_261")
}
shell_263(list) {
  return Max(list*)
}
shell_264() {
  return Func("shell_263")
}
shell_265(value, other) {
  return value <= other
}
shell_266() {
  return Func("shell_265")
}
shell_267(value, other) {
  return value < other
}
shell_268() {
  return Func("shell_267")
}
shell_269(value, other) {
  return value >= other
}
shell_270() {
  return Func("shell_269")
}
shell_271(value, other) {
  return value > other
}
shell_272() {
  return Func("shell_271")
}
shell_273(time) {
  if !(time > 0) {
    throw Exception("$.sleep: time is required")
  }
  Sleep, % time
  return
}
shell_274() {
  return Func("shell_273")
}
shell_275() {
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  MouseGetPos, __x__, __y__
  return [__x__, __y__]
}
shell_276() {
  return Func("shell_275")
}
shell_277(url, callback) {
  try {
    whr := ComObjCreate("WinHttp.WinHttpRequest.5.1")
    whr.Open("GET", url, true)
    whr.Send()
    whr.WaitForResponse()
    callback.Call(whr.ResponseText)
  } catch {
    callback.Call("")
  }
  return
}
shell_278() {
  return Func("shell_277")
}
shell_279(n) {
  return Floor(n)
}
shell_280() {
  return Func("shell_279")
}
shell_281(list) {
  return list[1]
}
shell_282() {
  return Func("shell_281")
}
shell_283() {
  ExitApp
  return
}
shell_284() {
  return Func("shell_283")
}
shell_285(ipt) {
  if ipt is Number
    return "number"
  if (IsFunc(ipt)) {
    return "function"
  }
  if (IsObject(ipt)) {
    if (ipt.Count() == ipt.Length()) {
      if !(ipt.Length() >= 0) {
        return "function"
      }
      return "array"
    }
    return "object"
  }
  return "string"
}
shell_286() {
  return Func("shell_285")
}
shell_287(list, callback) {
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    callback.Call(__item__, __i__)
  }
  return
}
shell_288() {
  return Func("shell_287")
}
shell_289(target, keys*) {
  for __index_for__, key in keys {
    target.Delete(key)
  }
  return
}
shell_290() {
  return Func("shell_289")
}
shell_291(callback) {
  if !(callback) {
    return
  }
  setTimer, % callback, Delete
  return
}
shell_292() {
  return Func("shell_291")
}
shell_293(callback) {
  if !(callback) {
    return
  }
  SetTimer, % callback, Delete
  return
}
shell_294() {
  return Func("shell_293")
}
shell_295(n) {
  return Ceil(n)
}
shell_296() {
  return Func("shell_295")
}
shell_297(block) {
  if (block) {
    BlockInput, On
    return
  }
  BlockInput, Off
  return
}
shell_298() {
  return Func("shell_297")
}
shell_299() {
  SoundBeep
  return
}
shell_300() {
  return Func("shell_299")
}
shell_301(args*) {
  __result__ := 0
  for __index_for__, __arg__ in args {
    __result__ := __result__ + __arg__
  }
  return __result__
}
shell_302() {
  return Func("shell_301")
}
shell_303(n) {
  return Abs(n)
}
shell_304() {
  return Func("shell_303")
}
shell_305(__ipt__) {
  if __ipt__ is Number
    return __ipt__ + 1
  return __ipt__
}

; Generated by Coffee-AHK/0.0.52
global __rf_shell__ := Func("shell_328")
global __ci_shell__ := Func("shell_327")

#KeyHistory, 0
#MaxThreads, 20
#NoEnv
#Persistent
#SingleInstance, Force
#UseHook, On

CoordMode, Mouse, Client
CoordMode, Pixel, Client
CoordMode, ToolTip, Client
SendMode, Event
SetBatchLines, 100ms
SetKeyDelay, 0, 50
SetMouseDelay, 0, 50
StringCaseSense, On

global __shell_module_1__ := (Func("shell_326")).Call()
global __shell_module_4__ := (Func("shell_324")).Call()
global __shell_module_6__ := (Func("shell_322")).Call()
global __shell_module_10__ := (Func("shell_320")).Call()
global __shell_module_11__ := (Func("shell_318")).Call()
global __shell_module_20__ := (Func("shell_316")).Call()
global __shell_module_22__ := (Func("shell_314")).Call()
global __shell_module_27__ := (Func("shell_312")).Call()
global __shell_module_30__ := (Func("shell_310")).Call()
global __shell_module_35__ := (Func("shell_308")).Call()
global __shell_module_40__ := (Func("shell_306")).Call()
global __shell_module_41__ := (Func("shell_304")).Call()
global __shell_module_42__ := (Func("shell_302")).Call()
global __shell_module_49__ := (Func("shell_300")).Call()
global __shell_module_50__ := (Func("shell_298")).Call()
global __shell_module_52__ := (Func("shell_296")).Call()
global __shell_module_53__ := (Func("shell_294")).Call()
global __shell_module_56__ := (Func("shell_292")).Call()
global __shell_module_58__ := (Func("shell_290")).Call()
global __shell_module_59__ := (Func("shell_288")).Call()
global __shell_module_61__ := (Func("shell_286")).Call()
global __shell_module_67__ := (Func("shell_283")).Call()
global __shell_module_69__ := (Func("shell_281")).Call()
global __shell_module_70__ := (Func("shell_279")).Call()
global __shell_module_78__ := (Func("shell_277")).Call()
global __shell_module_79__ := (Func("shell_275")).Call()
global __shell_module_80__ := (Func("shell_273")).Call()
global __shell_module_81__ := (Func("shell_271")).Call()
global __add__ := __shell_module_1__
(Func("shell_269")).Call()
global __delete__ := __shell_module_20__
(Func("shell_268")).Call()
(Func("shell_267")).Call()
global __first__ := __shell_module_35__
(Func("shell_266")).Call()
global __getType__ := __shell_module_27__
(Func("shell_265")).Call()
global __gt__ := __shell_module_40__
(Func("shell_264")).Call()
global __gte__ := __shell_module_41__
(Func("shell_263")).Call()
global __lt__ := __shell_module_49__
(Func("shell_262")).Call()
global __lte__ := __shell_module_50__
(Func("shell_261")).Call()
global __mod__ := __shell_module_56__
(Func("shell_260")).Call()
global __once__ := __shell_module_61__
(Func("shell_259")).Call()
global __replace__ := __shell_module_67__
(Func("shell_257")).Call()
(Func("shell_256")).Call()
global __startsWith__ := __shell_module_70__
(Func("shell_255")).Call()
global __shell_module_2__ := (Func("shell_254")).Call()
global __shell_module_3__ := (Func("shell_252")).Call()
global __shell_module_12__ := (Func("shell_250")).Call()
global __shell_module_16__ := (Func("shell_248")).Call()
global __shell_module_26__ := (Func("shell_246")).Call()
global __shell_module_33__ := (Func("shell_244")).Call()
global __shell_module_34__ := (Func("shell_242")).Call()
global __shell_module_38__ := (Func("shell_240")).Call()
global __shell_module_44__ := (Func("shell_238")).Call()
global __shell_module_45__ := (Func("shell_236")).Call()
global __shell_module_46__ := (Func("shell_234")).Call()
global __shell_module_57__ := (Func("shell_232")).Call()
global __shell_module_62__ := (Func("shell_230")).Call()
global __shell_module_63__ := (Func("shell_228")).Call()
global __shell_module_71__ := (Func("shell_226")).Call()
__replace__ := __shell_module_67__
global __noop__ := __shell_module_58__
class FileShell {
  __New(source) {
    this.source := source
  }
  append := Func("shell_224").Bind(this)
  isExists := Func("shell_223").Bind(this)
  read := Func("shell_222").Bind(this)
  remove := Func("shell_221").Bind(this)
  write := Func("shell_220").Bind(this)
}
__rf_shell__.Call(__noop__, "#rf/shell/1").Call(FileShell)
__noop__ := __shell_module_58__
class MathShell {
  abs := Func("shell_219").Bind(this)
  ceil := Func("shell_218").Bind(this)
  floor := Func("shell_217").Bind(this)
  max := Func("shell_216").Bind(this)
  min := Func("shell_215").Bind(this)
  round := Func("shell_214").Bind(this)
}
__rf_shell__.Call(__noop__, "#rf/shell/2").Call(MathShell)
__noop__ := __shell_module_58__
class WindowShell {
  __New(exe) {
    this.exe := "ahk_exe " . (exe) . ""
  }
  blur := Func("shell_213").Bind(this)
  close := Func("shell_212").Bind(this)
  focus := Func("shell_211").Bind(this)
  getBounds := Func("shell_210").Bind(this)
  hide := Func("shell_209").Bind(this)
  isActive := Func("shell_208").Bind(this)
  isExists := Func("shell_207").Bind(this)
  isFullScreen := Func("shell_206").Bind(this)
  kill := Func("shell_205").Bind(this)
  maximize := Func("shell_204").Bind(this)
  minimize := Func("shell_203").Bind(this)
  restore := Func("shell_202").Bind(this)
  setPriority := Func("shell_201").Bind(this)
  setStyle := Func("shell_200").Bind(this)
  show := Func("shell_199").Bind(this)
  wait := Func("shell_198").Bind(this)
}
__rf_shell__.Call(__noop__, "#rf/shell/3").Call(WindowShell)
global __alert__ := __shell_module_2__
global __isFunction__ := __shell_module_3__
(Func("shell_197")).Call()
global __beep__ := __shell_module_4__
__isFunction__ := __shell_module_3__
(Func("shell_196")).Call()
global __blockInput__ := __shell_module_6__
__isFunction__ := __shell_module_3__
(Func("shell_195")).Call()
global __clearInterval__ := __shell_module_10__
__isFunction__ := __shell_module_3__
(Func("shell_194")).Call()
global __clearTimeout__ := __shell_module_11__
__isFunction__ := __shell_module_3__
(Func("shell_193")).Call()
global __click__ := __shell_module_12__
__isFunction__ := __shell_module_3__
(Func("shell_192")).Call()
global __confirm__ := __shell_module_16__
__isFunction__ := __shell_module_3__
(Func("shell_191")).Call()
global __exit__ := __shell_module_30__
__isFunction__ := __shell_module_3__
(Func("shell_190")).Call()
global __findColor__ := __shell_module_33__
__isFunction__ := __shell_module_3__
(Func("shell_189")).Call()
global __findImage__ := __shell_module_34__
__isFunction__ := __shell_module_3__
(Func("shell_188")).Call()
global __getPosition__ := __shell_module_38__
__isFunction__ := __shell_module_3__
(Func("shell_187")).Call()
global __httpGet__ := __shell_module_42__
__isFunction__ := __shell_module_3__
(Func("shell_186")).Call()
global __isArray__ := __shell_module_44__
(Func("shell_185")).Call()
__isFunction__ := __shell_module_3__
(Func("shell_184")).Call()
global __isNumber__ := __shell_module_45__
(Func("shell_183")).Call()
global __isObject__ := __shell_module_26__
(Func("shell_182")).Call()
global __isString__ := __shell_module_46__
(Func("shell_181")).Call()
__isFunction__ := __shell_module_3__
global __max__ := __shell_module_52__
(Func("shell_180")).Call()
__isFunction__ := __shell_module_3__
global __min__ := __shell_module_53__
(Func("shell_179")).Call()
__isFunction__ := __shell_module_3__
global __move__ := __shell_module_57__
(Func("shell_178")).Call()
__isFunction__ := __shell_module_3__
__noop__ := __shell_module_58__
(Func("shell_177")).Call()
__isNumber__ := __shell_module_45__
global __now__ := __shell_module_59__
(Func("shell_176")).Call()
__isFunction__ := __shell_module_3__
global __open__ := __shell_module_62__
(Func("shell_175")).Call()
__isFunction__ := __shell_module_3__
global __play__ := __shell_module_63__
(Func("shell_174")).Call()
global __subString__ := __shell_module_71__
(Func("shell_173")).Call()
global __shell_module_23__ := (Func("shell_172")).Call()
global __shell_module_31__ := (Func("shell_170")).Call()
global __shell_module_37__ := (Func("shell_168")).Call()
global __shell_module_51__ := (Func("shell_166")).Call()
global __shell_module_64__ := (Func("shell_165")).Call()
global __shell_module_66__ := (Func("shell_163")).Call()
global __shell_module_68__ := (Func("shell_161")).Call()
global __shell_module_73__ := (Func("shell_159")).Call()
global __shell_module_74__ := (Func("shell_157")).Call()
global __shell_module_75__ := (Func("shell_155")).Call()
global __file__ := __shell_module_31__
__isFunction__ := __shell_module_3__
__isObject__ := __shell_module_26__
(Func("shell_153")).Call()
(Func("shell_152")).Call()
global __getColor__ := __shell_module_37__
__isFunction__ := __shell_module_3__
(Func("shell_151")).Call()
global __length__ := __shell_module_23__
(Func("shell_150")).Call()
(Func("shell_149")).Call()
(Func("shell_148")).Call()
global __math__ := __shell_module_51__
__isFunction__ := __shell_module_3__
(Func("shell_147")).Call()
global __pop__ := __shell_module_64__
(Func("shell_146")).Call()
global __push__ := __shell_module_66__
(Func("shell_145")).Call()
global __shift__ := __shell_module_68__
(Func("shell_144")).Call()
__length__ := __shell_module_23__
global __split__ := __shell_module_69__
(Func("shell_143")).Call()
(Func("shell_142")).Call()
global __toString__ := __shell_module_73__
(Func("shell_141")).Call()
global __unshift__ := __shell_module_74__
(Func("shell_140")).Call()
__isFunction__ := __shell_module_3__
__isObject__ := __shell_module_26__
__open__ := __shell_module_62__
global __window__ := __shell_module_75__
(Func("shell_139")).Call()
(Func("shell_138")).Call()
global __shell_module_5__ := (Func("shell_136")).Call()
global __shell_module_7__ := (Func("shell_134")).Call()
global __shell_module_8__ := (Func("shell_132")).Call()
global __shell_module_9__ := (Func("shell_130")).Call()
global __shell_module_32__ := (Func("shell_128")).Call()
global __shell_module_36__ := (Func("shell_126")).Call()
global __shell_module_43__ := (Func("shell_122")).Call()
global __shell_module_48__ := (Func("shell_120")).Call()
global __shell_module_60__ := (Func("shell_118")).Call()
global __shell_module_72__ := (Func("shell_116")).Call()
global __shell_module_84__ := (Func("shell_114")).Call()
global __bind__ := __shell_module_5__
__isFunction__ := __shell_module_3__
(Func("shell_112")).Call()
global __chunk__ := __shell_module_7__
global __join__ := __shell_module_8__
global __map__ := __shell_module_9__
(Func("shell_111")).Call()
global __each__ := __shell_module_22__
__length__ := __shell_module_23__
__join__ := __shell_module_8__
(Func("shell_109")).Call()
global __filter__ := __shell_module_32__
__join__ := __shell_module_8__
(Func("shell_107")).Call()
global __formatHotkey__ := __shell_module_36__
(Func("shell_105")).Call()
(Func("shell_104")).Call()
(Func("shell_103")).Call()
(Func("shell_102")).Call()
(Func("shell_101")).Call()
global __includes__ := __shell_module_43__
(Func("shell_100")).Call()
(Func("shell_99")).Call()
__join__ := __shell_module_8__
(Func("shell_98")).Call()
global __last__ := __shell_module_48__
(Func("shell_97")).Call()
__join__ := __shell_module_8__
__map__ := __shell_module_9__
(Func("shell_96")).Call()
global __nth__ := __shell_module_60__
(Func("shell_94")).Call()
__isFunction__ := __shell_module_3__
global __tip__ := __shell_module_72__
(Func("shell_93")).Call()
global __shell_module_14__ := (Func("shell_92")).Call()
global __shell_module_21__ := (Func("shell_89")).Call()
global __shell_module_24__ := (Func("shell_86")).Call()
global __shell_module_28__ := (Func("shell_84")).Call()
global __shell_module_29__ := (Func("shell_82")).Call()
global __shell_module_39__ := (Func("shell_80")).Call()
global __shell_module_65__ := (Func("shell_78")).Call()
global __shell_module_76__ := (Func("shell_74")).Call()
global __shell_module_77__ := (Func("shell_72")).Call()
__each__ := __shell_module_22__
__filter__ := __shell_module_32__
__noop__ := __shell_module_58__
__push__ := __shell_module_66__
__split__ := __shell_module_69__
class EmitterShell {
  __New() {
    this.bus := []
  }
  emit := Func("shell_70").Bind(this)
  off := Func("shell_65").Bind(this)
  on := Func("shell_62").Bind(this)
  once := Func("shell_61").Bind(this)
}
__rf_shell__.Call(__noop__, "#rf/shell/4").Call(EmitterShell)
global __shell_module_82__ := (Func("shell_60")).Call()
global __compact__ := __shell_module_14__
__join__ := __shell_module_8__
(Func("shell_58")).Call()
global __drop__ := __shell_module_21__
__join__ := __shell_module_8__
(Func("shell_57")).Call()
global __echo__ := __shell_module_24__
__isFunction__ := __shell_module_3__
(Func("shell_56")).Call()
global __eq__ := __shell_module_28__
(Func("shell_55")).Call()
(Func("shell_54")).Call()
(Func("shell_53")).Call()
(Func("shell_52")).Call()
global __exec__ := __shell_module_29__
__isFunction__ := __shell_module_3__
(Func("shell_51")).Call()
global __getState__ := __shell_module_39__
__isFunction__ := __shell_module_3__
(Func("shell_50")).Call()
__isFunction__ := __shell_module_3__
global __press__ := __shell_module_65__
(Func("shell_49")).Call()
__exit__ := __shell_module_30__
global __setTimeout__ := __shell_module_76__
(Func("shell_48")).Call()
global __shell_module_13__ := (Func("shell_46")).Call()
global __shell_module_17__ := (Func("shell_44")).Call()
global __shell_module_19__ := (Func("shell_41")).Call()
global __shell_module_25__ := (Func("shell_38")).Call()
global __shell_module_47__ := (Func("shell_36")).Call()
global __shell_module_83__ := (Func("shell_34")).Call()
global __clone__ := __shell_module_13__
__join__ := __shell_module_8__
(Func("shell_32")).Call()
(Func("shell_31")).Call()
global __debounce__ := __shell_module_17__
__isFunction__ := __shell_module_3__
(Func("shell_30")).Call()
global __delay__ := __shell_module_19__
__isFunction__ := __shell_module_3__
(Func("shell_29")).Call()
__join__ := __shell_module_8__
global __keys__ := __shell_module_47__
(Func("shell_28")).Call()
global __shell_module_15__ := (Func("shell_27")).Call()
global __shell_module_18__ := (Func("shell_25")).Call()
global __shell_module_54__ := (Func("shell_22")).Call()
global __shell_module_55__ := (Func("shell_20")).Call()
global __concat__ := __shell_module_15__
__join__ := __shell_module_8__
(Func("shell_18")).Call()
global __defer__ := __shell_module_18__
__isFunction__ := __shell_module_3__
(Func("shell_17")).Call()
__defer__ := __shell_module_18__
global __emitter__ := __shell_module_25__
__isFunction__ := __shell_module_3__
__isObject__ := __shell_module_26__
__getType__ := __shell_module_27__
(Func("shell_16")).Call()
(Func("shell_15")).Call()
(Func("shell_11")).Call()
(Func("shell_5")).Call()
__join__ := __shell_module_8__
__keys__ := __shell_module_47__
global __mixin__ := __shell_module_54__
global __values__ := __shell_module_55__
(Func("shell_1")).Call()
shell_1() {
  mapA := {a: 1}
  mapB := {b: 2}
  mapC := {c: 3}
  __rf_shell__.Call(__mixin__, "#rf/shell/5").Call(mapA, mapB, mapC)
  result := __rf_shell__.Call(__join__, "#rf/shell/6").Call(__rf_shell__.Call(__keys__, "#rf/shell/7").Call(mapA))
  if !(result == "a,b,c") {
    throw 1
  }
  result := __rf_shell__.Call(__join__, "#rf/shell/8").Call(__rf_shell__.Call(__values__, "#rf/shell/9").Call(mapA))
  if !(result == "1,2,3") {
    throw 2
  }
}
shell_2(map, emitter) {
  if !(map.a == 1) {
    throw "once - 2"
  }
  __rf_shell__.Call(emitter.off, "#rf/shell/10").Call()
}
shell_3(map, emitter) {
  if !(map.a == 1) {
    throw "once - 1"
  }
  __rf_shell__.Call(emitter.emit, "#rf/shell/11").Call("test")
  __rf_shell__.Call(__defer__, "#rf/shell/12").Call(Func("shell_2").Bind(map, emitter))
}
shell_4(map) {
  return map.a++
}
shell_5() {
  emitter := __rf_shell__.Call(__emitter__, "#rf/shell/13").Call()
  map := {a: 0}
  __rf_shell__.Call(emitter.once, "#rf/shell/14").Call("test", Func("shell_4").Bind(map))
  __rf_shell__.Call(emitter.emit, "#rf/shell/15").Call("test")
  __rf_shell__.Call(__defer__, "#rf/shell/16").Call(Func("shell_3").Bind(map, emitter))
}
shell_6(map, emitter) {
  if !(map.a == 2) {
    throw "off with name/" . (map.a) . ""
  }
  __rf_shell__.Call(emitter.off, "#rf/shell/17").Call()
}
shell_7(map, emitter) {
  if !(map.a == 2) {
    throw "on with name - 3/" . (map.a) . ""
  }
  __rf_shell__.Call(emitter.off, "#rf/shell/18").Call("test.a")
  __rf_shell__.Call(emitter.emit, "#rf/shell/19").Call("test.a")
  __rf_shell__.Call(__defer__, "#rf/shell/20").Call(Func("shell_6").Bind(map, emitter))
}
shell_8(map, emitter) {
  if !(map.a == 2) {
    throw "on with name - 2/" . (map.a) . ""
  }
  __rf_shell__.Call(emitter.emit, "#rf/shell/21").Call("test.b")
  __rf_shell__.Call(__defer__, "#rf/shell/22").Call(Func("shell_7").Bind(map, emitter))
}
shell_9(map, emitter) {
  if !(map.a == 1) {
    throw "on with name - 1/" . (map.a) . ""
  }
  __rf_shell__.Call(emitter.emit, "#rf/shell/23").Call("test.a")
  __rf_shell__.Call(__defer__, "#rf/shell/24").Call(Func("shell_8").Bind(map, emitter))
}
shell_10(map) {
  return map.a++
}
shell_11() {
  emitter := __rf_shell__.Call(__emitter__, "#rf/shell/25").Call()
  map := {a: 0}
  __rf_shell__.Call(emitter.on, "#rf/shell/26").Call("test.a", Func("shell_10").Bind(map))
  __rf_shell__.Call(emitter.emit, "#rf/shell/27").Call("test")
  __rf_shell__.Call(__defer__, "#rf/shell/28").Call(Func("shell_9").Bind(map, emitter))
}
shell_12(map, emitter) {
  if !(map.a == 1) {
    throw "off"
  }
  __rf_shell__.Call(emitter.off, "#rf/shell/29").Call()
}
shell_13(map, emitter) {
  if !(map.a == 1) {
    throw "on/" . (map.a) . ""
  }
  __rf_shell__.Call(emitter.off, "#rf/shell/30").Call("test")
  __rf_shell__.Call(emitter.emit, "#rf/shell/31").Call("test")
  __rf_shell__.Call(__defer__, "#rf/shell/32").Call(Func("shell_12").Bind(map, emitter))
}
shell_14(map) {
  return map.a++
}
shell_15() {
  emitter := __rf_shell__.Call(__emitter__, "#rf/shell/33").Call()
  map := {a: 0}
  __rf_shell__.Call(emitter.on, "#rf/shell/34").Call("test", Func("shell_14").Bind(map))
  __rf_shell__.Call(emitter.emit, "#rf/shell/35").Call("test")
  __rf_shell__.Call(__defer__, "#rf/shell/36").Call(Func("shell_13").Bind(map, emitter))
}
shell_16() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/37").Call(__emitter__)) {
    throw 0
  }
  emitter := __rf_shell__.Call(__emitter__, "#rf/shell/38").Call()
  if !(__rf_shell__.Call(__isObject__, "#rf/shell/39").Call(emitter)) {
    throw 1
  }
  for __index_for__, name in ["emit", "off", "on", "once"] {
    if !(__rf_shell__.Call(__isFunction__, "#rf/shell/40").Call(emitter[__ci_shell__.Call(name)])) {
      throw "" . (name) . "/" . (__rf_shell__.Call(__getType__, "#rf/shell/41").Call(emitter[__ci_shell__.Call(name)])) . ""
    }
  }
}
shell_17() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/42").Call(__defer__)) {
    throw 0
  }
}
shell_18() {
  listA := __rf_shell__.Call(__concat__, "#rf/shell/43").Call([1, 2, 3], 4, 5, [6, 7], 8, [9])
  if !((__rf_shell__.Call(__join__, "#rf/shell/44").Call(listA, "")) == "123456789") {
    throw listA
  }
}
shell_19(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/45").Call(ipt)
  if !(__type__ == "object") {
    throw "$.values: invalid type '" . (__type__) . "'"
  }
  __listResult__ := []
  for __index_for__, __key__ in __rf_shell__.Call(__keys__, "#rf/shell/46").Call(ipt) {
    __rf_shell__.Call(__push__, "#rf/shell/47").Call(__listResult__, ipt[__ci_shell__.Call(__key__)])
  }
  return __listResult__
}
shell_20() {
  __getType__ := __shell_module_27__
  __keys__ := __shell_module_47__
  __push__ := __shell_module_66__
  return Func("shell_19")
}
shell_21(__tail__, args*) {
  if !(__rf_shell__.Call(__length__, "#rf/shell/48").Call(args)) {
    throw "$.mixin: invalid arguments"
  }
  __result__ := args[1]
  for __index_for__, __item__ in __rf_shell__.Call(__tail__, "#rf/shell/49").Call(args) {
    for __key__, __value__ in __item__ {
      __result__[__ci_shell__.Call(__key__)] := __value__
    }
  }
  return __result__
}
shell_22() {
  __length__ := __shell_module_23__
  __tail__ := __shell_module_83__
  return Func("shell_21").Bind(__tail__)
}
shell_23(__func__, __args__) {
  return __rf_shell__.Call(__func__, "#rf/shell/50").Call(__args__*)
}
shell_24(__func__, __args__*) {
  return __rf_shell__.Call(__delay__, "#rf/shell/51").Call(Func("shell_23").Bind(__func__, __args__), 1)
}
shell_25() {
  __delay__ := __shell_module_19__
  return Func("shell_24")
}
shell_26(__list__, __values__*) {
  __listNew__ := __rf_shell__.Call(__clone__, "#rf/shell/52").Call(__list__)
  for __index_for__, __value__ in __values__ {
    if (__rf_shell__.Call(__isArray__, "#rf/shell/53").Call(__value__)) {
      for __index_for__, __item__ in __value__ {
        __rf_shell__.Call(__push__, "#rf/shell/54").Call(__listNew__, __item__)
      }
    } else {
      __rf_shell__.Call(__push__, "#rf/shell/55").Call(__listNew__, __value__)
    }
  }
  return __listNew__
}
shell_27() {
  __clone__ := __shell_module_13__
  __isArray__ := __shell_module_44__
  __push__ := __shell_module_66__
  return Func("shell_26")
}
shell_28() {
  map := {a: 1, b: 2, c: 3}
  result := __rf_shell__.Call(__join__, "#rf/shell/56").Call(__rf_shell__.Call(__keys__, "#rf/shell/57").Call(map))
  if !(result == "a,b,c") {
    throw 0
  }
  map2 := {0: "", 1: "a", 2: "b", 3: "c"}
  result := __rf_shell__.Call(__join__, "#rf/shell/58").Call(__rf_shell__.Call(__keys__, "#rf/shell/59").Call(map2))
  if !(result == "0,1,2,3") {
    throw result
  }
}
shell_29() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/60").Call(__delay__)) {
    throw 0
  }
}
shell_30() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/61").Call(__debounce__)) {
    throw 0
  }
}
shell_31() {
  map := {a: 1, b: 2, c: 3}
  mapA := __rf_shell__.Call(__clone__, "#rf/shell/62").Call(map)
  if !((__rf_shell__.Call(__join__, "#rf/shell/63").Call([mapA.a, mapA.b, mapA.c], "")) == "123") {
    throw mapA
  }
}
shell_32() {
  list := [1, 2, 3]
  listA := __rf_shell__.Call(__clone__, "#rf/shell/64").Call(list)
  if !((__rf_shell__.Call(__join__, "#rf/shell/65").Call(listA, "")) == "123") {
    throw (__rf_shell__.Call(__join__, "#rf/shell/66").Call(listA, ""))
  }
}
shell_33(list) {
  return __rf_shell__.Call(__drop__, "#rf/shell/67").Call(list, 1)
}
shell_34() {
  __drop__ := __shell_module_21__
  return Func("shell_33")
}
shell_35(__sort__, ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/68").Call(ipt)
  if !(__type__ == "object") {
    throw "$.keys: invalid type '" . (__type__) . "'"
  }
  __listResult__ := []
  for __key__, __value__ in ipt {
    __rf_shell__.Call(__push__, "#rf/shell/69").Call(__listResult__, __key__)
  }
  return __rf_shell__.Call(__sort__, "#rf/shell/70").Call(__listResult__)
}
shell_36() {
  __getType__ := __shell_module_27__
  __push__ := __shell_module_66__
  __sort__ := __shell_module_82__
  return Func("shell_35").Bind(__sort__)
}
shell_37() {
  return new EmitterShell()
}
shell_38() {
  return Func("shell_37")
}
shell_39(__func__, __args__) {
  return __rf_shell__.Call(__func__, "#rf/shell/71").Call(__args__*)
}
shell_40(__func__, __wait__, __args__*) {
  __timer__ := __rf_shell__.Call(__setTimeout__, "#rf/shell/72").Call(Func("shell_39").Bind(__func__, __args__), __wait__)
  return __timer__
}
shell_41() {
  __setTimeout__ := __shell_module_76__
  return Func("shell_40")
}
shell_42(__tDebounce__, __func__, __wait__, __index__) {
  __rf_shell__.Call(__clearTimeout__, "#rf/shell/73").Call(__tDebounce__[__ci_shell__.Call(__index__)])
  __tDebounce__[__ci_shell__.Call(__index__)] := __rf_shell__.Call(__setTimeout__, "#rf/shell/74").Call(__func__, __wait__)
}
shell_43(__tDebounce__, __func__, __wait__) {
  __iDebounce__++
  return Func("shell_42").Bind(__tDebounce__, __func__, __wait__, __iDebounce__)
}
shell_44() {
  __clearTimeout__ := __shell_module_11__
  __setTimeout__ := __shell_module_76__
  __iDebounce__ := 0
  __tDebounce__ := {}
  return Func("shell_43").Bind(__tDebounce__)
}
shell_45(__slice__, ipt) {
  if (__rf_shell__.Call(__isArray__, "#rf/shell/75").Call(ipt)) {
    return __rf_shell__.Call(__slice__, "#rf/shell/76").Call(ipt)
  }
  if (__rf_shell__.Call(__isObject__, "#rf/shell/77").Call(ipt)) {
    __mapNew__ := {}
    for __key__, __value__ in ipt {
      __mapNew__[__ci_shell__.Call(__key__)] := __value__
    }
    return __mapNew__
  }
  throw "$.clone: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/78").Call(ipt)) . "'"
}
shell_46() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  __isObject__ := __shell_module_26__
  __slice__ := __shell_module_77__
  return Func("shell_45").Bind(__slice__)
}
shell_47() {
  return __rf_shell__.Call(__exit__, "#rf/shell/79").Call()
}
shell_48() {
  return __rf_shell__.Call(__setTimeout__, "#rf/shell/80").Call(Func("shell_47"), 1000)
}
shell_49() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/81").Call(__press__)) {
    throw "__press__ is not a function"
  }
}
shell_50() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/82").Call(__getState__)) {
    throw "$.getState is not a function"
  }
}
shell_51() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/83").Call(__exec__)) {
    throw "$.exec is not a function"
  }
}
shell_52() {
  mapA := {a: 1, b: 2}
  mapB := {a: 1, b: 2}
  if !(__rf_shell__.Call(__eq__, "#rf/shell/84").Call(mapA, mapB)) {
    throw 0
  }
  mapC := {a: 1, b: 2, c: 3}
  if (__rf_shell__.Call(__eq__, "#rf/shell/85").Call(mapA, mapC)) {
    throw 1
  }
}
shell_53() {
  listA := [1, 2]
  listB := [1, 2]
  if !(__rf_shell__.Call(__eq__, "#rf/shell/86").Call(listA, listB)) {
    throw 0
  }
  listC := [1, 2, 3]
  if (__rf_shell__.Call(__eq__, "#rf/shell/87").Call(listA, listC)) {
    throw 1
  }
}
shell_54() {
  stringA := "hello"
  stringB := "hello"
  if !(__rf_shell__.Call(__eq__, "#rf/shell/88").Call(stringA, stringB)) {
    throw 0
  }
  stringC := "aloha"
  if (__rf_shell__.Call(__eq__, "#rf/shell/89").Call(stringA, stringC)) {
    throw 1
  }
}
shell_55() {
  a := 1
  b := 1
  if !(__rf_shell__.Call(__eq__, "#rf/shell/90").Call(a, b)) {
    throw 0
  }
  c := 2
  if (__rf_shell__.Call(__eq__, "#rf/shell/91").Call(a, c)) {
    throw 1
  }
}
shell_56() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/92").Call(__echo__)) {
    throw "$.echo is not a function"
  }
  message := "hello world"
  result := __rf_shell__.Call(__echo__, "#rf/shell/93").Call(message)
  if !(result == message) {
    throw "$.echo did not return the expected value"
  }
}
shell_57() {
  list := [1, 2, 3, 4, 5]
  listA := __rf_shell__.Call(__drop__, "#rf/shell/94").Call(list)
  result := __rf_shell__.Call(__join__, "#rf/shell/95").Call(listA, "")
  if !(result == "2345") {
    throw result
  }
  listB := __rf_shell__.Call(__drop__, "#rf/shell/96").Call(list, 3)
  result := __rf_shell__.Call(__join__, "#rf/shell/97").Call(listB, "")
  if !(result == "45") {
    throw result
  }
}
shell_58() {
  list := [0, 1, false, true, "", "x"]
  listA := __rf_shell__.Call(__compact__, "#rf/shell/98").Call(list)
  if !((__rf_shell__.Call(__join__, "#rf/shell/99").Call(listA, "")) == "11x") {
    throw listA
  }
}
shell_59(list) {
  __string__ := __rf_shell__.Call(__join__, "#rf/shell/100").Call(list, ",")
  Sort, __string__, C D,
  return __rf_shell__.Call(__split__, "#rf/shell/101").Call(__string__, ",")
}
shell_60() {
  __join__ := __shell_module_8__
  __split__ := __shell_module_69__
  return Func("shell_59")
}
shell_61(this, key, callback) {
  __array__ := __rf_shell__.Call(__split__, "#rf/shell/102").Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  __rf_shell__.Call(__push__, "#rf/shell/103").Call(this.bus, [__type__, __name__, callback, "once"])
  return
}
shell_62(this, key, callback) {
  __array__ := __rf_shell__.Call(__split__, "#rf/shell/104").Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  __rf_shell__.Call(__push__, "#rf/shell/105").Call(this.bus, [__type__, __name__, callback, "always"])
  return
}
shell_63(__type__, __it__) {
  return __it__[1] != __type__
}
shell_64(__type__, __name__, __it__) {
  return !(__it__[1] == __type__ && __it__[2] == __name__)
}
shell_65(this, key) {
  __array__ := __rf_shell__.Call(__split__, "#rf/shell/106").Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  if !(__type__) {
    this.bus := []
    return
  }
  if (__name__) {
    this.bus := __rf_shell__.Call(__filter__, "#rf/shell/107").Call(this.bus, Func("shell_64").Bind(__type__, __name__))
  } else {
    this.bus := __rf_shell__.Call(__filter__, "#rf/shell/108").Call(this.bus, Func("shell_63").Bind(__type__))
  }
  return
}
shell_66(__it__) {
  return __it__[4] != "expired"
}
shell_67(args, __it__) {
  __rf_shell__.Call(__it__[3], "#rf/shell/109").Call(args*)
  if (__it__[4] == "once") {
    __it__[4] := "expired"
  }
  return
}
shell_68(__type__, __it__) {
  return __it__[1] == __type__
}
shell_69(__type__, __name__, __it__) {
  return __it__[1] == __type__ && __it__[2] == __name__
}
shell_70(this, key, args*) {
  __array__ := __rf_shell__.Call(__split__, "#rf/shell/110").Call(key, ".")
  __type__ := __array__[1]
  __name__ := __array__[2]
  if !(__type__) {
    return
  }
  if (__name__) {
    __list__ := __rf_shell__.Call(__filter__, "#rf/shell/111").Call(this.bus, Func("shell_69").Bind(__type__, __name__))
  } else {
    __list__ := __rf_shell__.Call(__filter__, "#rf/shell/112").Call(this.bus, Func("shell_68").Bind(__type__))
  }
  __rf_shell__.Call(__each__, "#rf/shell/113").Call(__list__, Func("shell_67").Bind(args))
  this.bus := __rf_shell__.Call(__filter__, "#rf/shell/114").Call(this.bus, Func("shell_66"))
  return
}
shell_71(__reverse__, list, start := 0, end := 0) {
  if !(__rf_shell__.Call(__getType__, "#rf/shell/115").Call(list)) {
    throw "$.slice: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/116").Call(list)) . "'"
  }
  __len__ := __rf_shell__.Call(__length__, "#rf/shell/117").Call(list)
  if !(end) {
    end := __len__
  }
  if (start > __len__) {
    start := __len__
  }
  if (start < 0) {
    start := __len__ + start
  }
  if (end > __len__) {
    end := __len__
  }
  if (end < 0) {
    end := __len__ + end
  }
  __isReverse__ := false
  if (start > end) {
    __isReverse__ := true
    __array__ := [end, start]
    start := __array__[1]
    end := __array__[2]
  }
  __listNew__ := []
  __n__ := 0
  __max__ := end - start
  while (__n__ < __max__) {
    __rf_shell__.Call(__push__, "#rf/shell/118").Call(__listNew__, list[__ci_shell__.Call(start + __n__)])
    __n__++
  }
  if (__isReverse__) {
    return __rf_shell__.Call(__reverse__, "#rf/shell/119").Call(__listNew__)
  }
  return __listNew__
}
shell_72() {
  __getType__ := __shell_module_27__
  __length__ := __shell_module_23__
  __push__ := __shell_module_66__
  __reverse__ := __shell_module_84__
  return Func("shell_71").Bind(__reverse__)
}
shell_73(callback, time) {
  callback := __rf_shell__.Call(__bind__, "#rf/shell/120").Call(callback)
  if !(__rf_shell__.Call(__isNumber__, "#rf/shell/121").Call(time)) {
    throw "$.setTimeout: invalid type"
  }
  if (time < 1) {
    time := 1
  }
  SetTimer, % callback, % 0 - time
  return callback
}
shell_74() {
  __bind__ := __shell_module_5__
  __isNumber__ := __shell_module_45__
  return Func("shell_73")
}
shell_75(__validateInputPress__, __formatInputPress__, __trim__, listInput*) {
  if !(__rf_shell__.Call(__validateInputPress__, "#rf/shell/122").Call(listInput)) {
    return
  }
  __listKey__ := __rf_shell__.Call(__formatInputPress__, "#rf/shell/123").Call(listInput)
  __listResult__ := []
  __len__ := __rf_shell__.Call(__length__, "#rf/shell/124").Call(__listKey__)
  for __i__, __key__ in __listKey__ {
    __i__ := __i__ - 1
    if (__i__ == __len__ - 1) {
      __listResult__[__ci_shell__.Call(__i__)] := __rf_shell__.Call(__split__, "#rf/shell/125").Call(__key__, ":")
      continue
    }
    if (__rf_shell__.Call(__includes__, "#rf/shell/126").Call(__key__, ":")) {
      __listResult__[__ci_shell__.Call(__i__)] := __rf_shell__.Call(__split__, "#rf/shell/127").Call(__key__, ":")
      __listResult__[__ci_shell__.Call((__len__ - 1) * 2 - __i__)] := __rf_shell__.Call(__split__, "#rf/shell/128").Call(__key__, ":")
    } else {
      __listResult__[__ci_shell__.Call(__i__)] := [__key__, "down"]
      __listResult__[__ci_shell__.Call((__len__ - 1) * 2 - __i__)] := [__key__, "up"]
    }
  }
  for __i__, __it__ in __listResult__ {
    __i__ := __i__ - 1
    if (__it__[1] == "win") {
      __it__[1] := "lwin"
    }
    __listResult__[__ci_shell__.Call(__i__)] := __rf_shell__.Call(__trim__, "#rf/shell/129").Call("" . (__it__[1]) . " " . (__it__[2]) . "")
  }
  __result__ := ""
  for __index_for__, __it__ in __listResult__ {
    __result__ := "" . (__result__) . "{" . (__it__) . "}"
  }
  Send, % __result__
  return
}
shell_76(listInput) {
  if !(__rf_shell__.Call(__length__, "#rf/shell/130").Call(listInput)) {
    return false
  }
  __key__ := listInput[1]
  if (__rf_shell__.Call(__includes__, "#rf/shell/131").Call(__key__, "-button")) {
    __key__ := __rf_shell__.Call(__replace__, "#rf/shell/132").Call(__key__, "l-button", "left")
    __key__ := __rf_shell__.Call(__replace__, "#rf/shell/133").Call(__key__, "m-button", "middle")
    __key__ := __rf_shell__.Call(__replace__, "#rf/shell/134").Call(__key__, "r-button", "right")
    __rf_shell__.Call(__click__, "#rf/shell/135").Call(__key__)
    return false
  }
  return true
}
shell_77(__createList__, __toLowerCase__, listInput) {
  __listKey__ := __rf_shell__.Call(__createList__, "#rf/shell/136").Call("string")
  for __index_for__, __input__ in listInput {
    __ipt__ := __rf_shell__.Call(__toLowerCase__, "#rf/shell/137").Call(__input__)
    __ipt__ := __rf_shell__.Call(__replace__, "#rf/shell/138").Call(__ipt__, " ", "")
    __ipt__ := __rf_shell__.Call(__replace__, "#rf/shell/139").Call(__ipt__, "-", "")
    __rf_shell__.Call(__push__, "#rf/shell/140").Call(__listKey__, (__rf_shell__.Call(__split__, "#rf/shell/141").Call(__ipt__, "+"))*)
  }
  return __listKey__
}
shell_78() {
  __click__ := __shell_module_12__
  __createList__ := __shell_module_78__
  __includes__ := __shell_module_43__
  __length__ := __shell_module_23__
  __push__ := __shell_module_66__
  __replace__ := __shell_module_67__
  __split__ := __shell_module_69__
  __toLowerCase__ := __shell_module_79__
  __trim__ := __shell_module_80__
  __formatInputPress__ := Func("shell_77").Bind(__createList__, __toLowerCase__)
  __validateInputPress__ := Func("shell_76")
  return Func("shell_75").Bind(__validateInputPress__, __formatInputPress__, __trim__)
}
shell_79(key) {
  key := __rf_shell__.Call(__formatHotkey__, "#rf/shell/142").Call(key)
  return GetKeyState(key, "P")
}
shell_80() {
  __formatHotkey__ := __shell_module_36__
  return Func("shell_79")
}
shell_81(__input__, __callback__) {
  if (__rf_shell__.Call(__isString__, "#rf/shell/143").Call(__input__)) {
    __input__ := [__input__]
  }
  __input__ := __rf_shell__.Call(__join__, "#rf/shell/144").Call(__input__, " && ")
  RunWait, %comSpec% /c %__input__%,, Hide UseErrorLevel
  __rf_shell__.Call(__callback__, "#rf/shell/145").Call(ErrorLevel)
}
shell_82() {
  __isString__ := __shell_module_46__
  __join__ := __shell_module_8__
  __noop__ := __shell_module_58__
  return Func("shell_81").Bind(__noop__)
}
shell_83(value, other) {
  __typeA__ := __rf_shell__.Call(__getType__, "#rf/shell/146").Call(value)
  __typeB__ := __rf_shell__.Call(__getType__, "#rf/shell/147").Call(other)
  if !(__typeA__ == __typeB__) {
    return false
  }
  if (__rf_shell__.Call(__includes__, "#rf/shell/148").Call(["function", "number", "string"], __typeA__)) {
    return value == other
  }
  __lengthA__ := __rf_shell__.Call(__length__, "#rf/shell/149").Call(value)
  __lengthB__ := __rf_shell__.Call(__length__, "#rf/shell/150").Call(other)
  if !(__lengthA__ == __lengthB__) {
    return false
  }
  if (__rf_shell__.Call(__isArray__, "#rf/shell/151").Call(value)) {
    for __i__, __it__ in value {
      __i__ := __i__ - 1
      if !(__rf_shell__.Call(__eq__, "#rf/shell/152").Call(__it__, other[__ci_shell__.Call(__i__)])) {
        return false
      }
    }
    return true
  }
  if (__rf_shell__.Call(__isObject__, "#rf/shell/153").Call(value)) {
    for __k__, __v__ in value {
      if !(__rf_shell__.Call(__eq__, "#rf/shell/154").Call(__v__, other[__ci_shell__.Call(__k__)])) {
        return false
      }
    }
    return true
  }
  throw "$.eq: invalid type '" . (__typeA__) . "'"
}
shell_84() {
  __getType__ := __shell_module_27__
  __includes__ := __shell_module_43__
  __isArray__ := __shell_module_44__
  __isObject__ := __shell_module_26__
  __length__ := __shell_module_23__
  __eq__ := Func("shell_83")
  return __eq__
}
shell_85(message) {
  __rf_shell__.Call(__tip__, "#rf/shell/155").Call("[" . (__rf_shell__.Call(__now__, "#rf/shell/156").Call()) . "] " . (__rf_shell__.Call(__toString__, "#rf/shell/157").Call(message)) . "", [0, 0])
  return message
}
shell_86() {
  __now__ := __shell_module_59__
  __tip__ := __shell_module_72__
  __toString__ := __shell_module_73__
  return Func("shell_85")
}
shell_87(n, _it, i) {
  return i >= n
}
shell_88(list, n := 1) {
  return __rf_shell__.Call(__filter__, "#rf/shell/158").Call(list, Func("shell_87").Bind(n))
}
shell_89() {
  __filter__ := __shell_module_32__
  return Func("shell_88")
}
shell_90(it) {
  return !!it
}
shell_91(list) {
  return __rf_shell__.Call(__filter__, "#rf/shell/159").Call(list, Func("shell_90"))
}
shell_92() {
  __filter__ := __shell_module_32__
  return Func("shell_91")
}
shell_93() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/160").Call(__tip__)) {
    throw "$.tip is not a function"
  }
  message := "hello world"
  result := __rf_shell__.Call(__tip__, "#rf/shell/161").Call(message)
  if !(result == message) {
    throw "$.tip did not return the expected value: " . (result) . ""
  }
}
shell_94() {
  list := [0, 1, 2, 3]
  n := __rf_shell__.Call(__nth__, "#rf/shell/162").Call(list, 0)
  if !(n == 0) {
    throw n
  }
  n := __rf_shell__.Call(__nth__, "#rf/shell/163").Call(list, 1)
  if !(n == 1) {
    throw n
  }
  n := __rf_shell__.Call(__nth__, "#rf/shell/164").Call(list, -1)
  if !(n == 3) {
    throw n
  }
}
shell_95(n) {
  return n + 1
}
shell_96() {
  list := [1, 2, 3]
  result := __rf_shell__.Call(__join__, "#rf/shell/165").Call(__rf_shell__.Call(__map__, "#rf/shell/166").Call(list, Func("shell_95")))
  if !(result == "2,3,4") {
    throw 0
  }
}
shell_97() {
  list := [1, 2, 3]
  item := __rf_shell__.Call(__last__, "#rf/shell/167").Call(list)
  if !(item == 3) {
    throw 0
  }
}
shell_98() {
  list := [1, 2, 3, 4, 5]
  result := __rf_shell__.Call(__join__, "#rf/shell/168").Call(list)
  if !(result == "1,2,3,4,5") {
    throw 1
  }
  result := __rf_shell__.Call(__join__, "#rf/shell/169").Call(list, "")
  if !(result == "12345") {
    throw 2
  }
}
shell_99() {
  list := [1, 2, 3]
  result := __rf_shell__.Call(__includes__, "#rf/shell/170").Call(list, 1)
  if !(result) {
    throw 3
  }
  result := __rf_shell__.Call(__includes__, "#rf/shell/171").Call(list, 4)
  if (result) {
    throw 4
  }
}
shell_100() {
  string := "string"
  result := __rf_shell__.Call(__includes__, "#rf/shell/172").Call(string, "s")
  if !(result) {
    throw 1
  }
  result := __rf_shell__.Call(__includes__, "#rf/shell/173").Call(string, "a")
  if (result) {
    throw 2
  }
}
shell_101() {
  key := "alt + ctrl + shift + win + esc"
  result := __rf_shell__.Call(__formatHotkey__, "#rf/shell/174").Call(key)
  if !(result == "!^+#esc") {
    throw result
  }
}
shell_102() {
  key := "win + r"
  result := __rf_shell__.Call(__formatHotkey__, "#rf/shell/175").Call(key)
  if !(result == "#r") {
    throw result
  }
}
shell_103() {
  key := "shift + a"
  result := __rf_shell__.Call(__formatHotkey__, "#rf/shell/176").Call(key)
  if !(result == "+a") {
    throw result
  }
}
shell_104() {
  key := "ctrl + f5"
  result := __rf_shell__.Call(__formatHotkey__, "#rf/shell/177").Call(key)
  if !(result == "^f5") {
    throw result
  }
}
shell_105() {
  key := "alt + f4"
  result := __rf_shell__.Call(__formatHotkey__, "#rf/shell/178").Call(key)
  if !(result == "!f4") {
    throw result
  }
}
shell_106(it) {
  return it != 2
}
shell_107() {
  list := [1, 2, 3]
  listA := __rf_shell__.Call(__filter__, "#rf/shell/179").Call(list, Func("shell_106"))
  if !((__rf_shell__.Call(__join__, "#rf/shell/180").Call(listA, "")) == "13") {
    throw 0
  }
}
shell_108(listA, length, it, i) {
  return listA[__ci_shell__.Call(length - i)] := it
}
shell_109() {
  list := [1, 2, 3, 4]
  listA := []
  length := __rf_shell__.Call(__length__, "#rf/shell/181").Call(list)
  __rf_shell__.Call(__each__, "#rf/shell/182").Call(list, Func("shell_108").Bind(listA, length))
  string := __rf_shell__.Call(__join__, "#rf/shell/183").Call(list)
  if !(string := "4321") {
    throw string
  }
}
shell_110(it) {
  return __rf_shell__.Call(__join__, "#rf/shell/184").Call(it, "")
}
shell_111() {
  list := [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  listA := __rf_shell__.Call(__chunk__, "#rf/shell/185").Call(list, 4)
  string := __rf_shell__.Call(__join__, "#rf/shell/186").Call((__rf_shell__.Call(__map__, "#rf/shell/187").Call(listA, Func("shell_110"))), ",")
  if !(string == "1234,5678,910") {
    throw string
  }
}
shell_112() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/188").Call(__bind__)) {
    throw 0
  }
}
shell_113(list) {
  __len__ := __rf_shell__.Call(__length__, "#rf/shell/189").Call(list)
  __listNew__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    __listNew__[__ci_shell__.Call(__len__ - 1 - __i__)] := __item__
  }
  for __i__, __item__ in __listNew__ {
    __i__ := __i__ - 1
    list[__ci_shell__.Call(__i__)] := __item__
  }
  return list
}
shell_114() {
  __length__ := __shell_module_23__
  return Func("shell_113")
}
shell_115(message, p := "") {
  if !(message) {
    return message
  }
  if !(p) {
    p := __rf_shell__.Call(__getPosition__, "#rf/shell/190").Call()
  }
  __msg__ := __rf_shell__.Call(__toString__, "#rf/shell/191").Call(message)
  __rf_shell__.Call(__noop__, "#rf/shell/192").Call(__msg__)
  ToolTip, % __msg__, % p[1], % p[2]
  return message
}
shell_116() {
  __getPosition__ := __shell_module_38__
  __noop__ := __shell_module_58__
  __toString__ := __shell_module_73__
  return Func("shell_115")
}
shell_117(list, n := 0) {
  if (n >= 0) {
    return list[__ci_shell__.Call(n)]
  } else {
    return list[__ci_shell__.Call((__rf_shell__.Call(__length__, "#rf/shell/193").Call(list)) + n)]
  }
}
shell_118() {
  __length__ := __shell_module_23__
  return Func("shell_117")
}
shell_119(list) {
  return list[__ci_shell__.Call((__rf_shell__.Call(__length__, "#rf/shell/194").Call(list)) - 1)]
}
shell_120() {
  __length__ := __shell_module_23__
  return Func("shell_119")
}
shell_121(ipt, needle) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/195").Call(ipt)
  if ((__rf_shell__.Call(__isString__, "#rf/shell/196").Call(ipt)) || __rf_shell__.Call(__isNumber__, "#rf/shell/197").Call(ipt)) {
    if !(__rf_shell__.Call(__isString__, "#rf/shell/198").Call(needle)) {
      return false
    }
    return (InStr((__rf_shell__.Call(__toString__, "#rf/shell/199").Call(ipt)), needle)) > 0
  }
  if (__rf_shell__.Call(__isArray__, "#rf/shell/200").Call(ipt)) {
    for __index_for__, __it__ in ipt {
      if (__it__ == needle) {
        return true
      }
    }
    return false
  }
  throw "$.includes: invalid type '" . (__type__) . "'"
}
shell_122() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  __isNumber__ := __shell_module_45__
  __isString__ := __shell_module_46__
  __toString__ := __shell_module_73__
  return Func("shell_121")
}
shell_123(__formatKeyFormatHotkey__, __pickPrefixFormatHotkey__, __trim__, key) {
  __listKey__ := __rf_shell__.Call(__formatKeyFormatHotkey__, "#rf/shell/201").Call(key)
  __array__ := __rf_shell__.Call(__pickPrefixFormatHotkey__, "#rf/shell/202").Call(__listKey__)
  __prefix__ := __array__[1]
  __listKey__ := __array__[2]
  __result__ := ""
  for __index_for__, __it__ in __listKey__ {
    __result__ := "" . (__result__) . " & " . (__it__) . ""
  }
  return __rf_shell__.Call(__replace__, "#rf/shell/203").Call("" . (__prefix__) . "" . (__rf_shell__.Call(__trim__, "#rf/shell/204").Call(__result__, " &")) . "", ":", " ")
}
shell_124(__createList__, listKey) {
  if ((__rf_shell__.Call(__length__, "#rf/shell/205").Call(listKey)) == 1) {
    return ["", listKey]
  }
  __prefix__ := ""
  __listNew__ := __rf_shell__.Call(__createList__, "#rf/shell/206").Call("string")
  for __index_for__, __key__ in listKey {
    if (__key__ == "alt") {
      __prefix__ := "" . (__prefix__) . "!"
      continue
    }
    if (__key__ == "ctrl") {
      __prefix__ := "" . (__prefix__) . "^"
      continue
    }
    if (__key__ == "shift") {
      __prefix__ := "" . (__prefix__) . "+"
      continue
    }
    if (__key__ == "win") {
      __prefix__ := "" . (__prefix__) . "#"
      continue
    }
    __rf_shell__.Call(__push__, "#rf/shell/207").Call(__listNew__, __key__)
  }
  return [__prefix__, __listNew__]
}
shell_125(__createList__, __toLowerCase__, key) {
  __listKey__ := __rf_shell__.Call(__createList__, "#rf/shell/208").Call("string")
  __key__ := __rf_shell__.Call(__toLowerCase__, "#rf/shell/209").Call(key)
  __key__ := __rf_shell__.Call(__replace__, "#rf/shell/210").Call(__key__, " ", "")
  __key__ := __rf_shell__.Call(__replace__, "#rf/shell/211").Call(__key__, "-", "")
  __listSplit__ := __rf_shell__.Call(__split__, "#rf/shell/212").Call(__key__, "+")
  if (__rf_shell__.Call(__length__, "#rf/shell/213").Call(__listSplit__)) {
    __rf_shell__.Call(__push__, "#rf/shell/214").Call(__listKey__, __listSplit__*)
  }
  return __listKey__
}
shell_126() {
  __createList__ := __shell_module_78__
  __length__ := __shell_module_23__
  __push__ := __shell_module_66__
  __replace__ := __shell_module_67__
  __split__ := __shell_module_69__
  __toLowerCase__ := __shell_module_79__
  __trim__ := __shell_module_80__
  __formatKeyFormatHotkey__ := Func("shell_125").Bind(__createList__, __toLowerCase__)
  __pickPrefixFormatHotkey__ := Func("shell_124").Bind(__createList__)
  return Func("shell_123").Bind(__formatKeyFormatHotkey__, __pickPrefixFormatHotkey__, __trim__)
}
shell_127(list, callback) {
  __listResult__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    if !(__rf_shell__.Call(callback, "#rf/shell/215").Call(__item__, __i__)) {
      continue
    }
    __rf_shell__.Call(__push__, "#rf/shell/216").Call(__listResult__, __item__)
  }
  return __listResult__
}
shell_128() {
  __push__ := __shell_module_66__
  return Func("shell_127")
}
shell_129(list, callback) {
  __listResult__ := []
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    __rf_shell__.Call(__push__, "#rf/shell/217").Call(__listResult__, __rf_shell__.Call(callback, "#rf/shell/218").Call(__item__, __i__))
  }
  return __listResult__
}
shell_130() {
  __push__ := __shell_module_66__
  return Func("shell_129")
}
shell_131(list, seperator := ",") {
  __result__ := ""
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    if !(__i__) {
      __result__ := __rf_shell__.Call(__toString__, "#rf/shell/219").Call(__item__)
      continue
    }
    __result__ := "" . (__result__) . "" . (seperator) . "" . (__item__) . ""
  }
  return __result__
}
shell_132() {
  __toString__ := __shell_module_73__
  return Func("shell_131")
}
shell_133(__list__, __size__ := 1) {
  __listNew__ := []
  __len__ := __rf_shell__.Call(__length__, "#rf/shell/220").Call(__list__)
  __i__ := 0
  while (__i__ < __len__ / __size__) {
    __listTemp__ := []
    __j__ := 0
    while (__j__ < __size__) {
      __index__ := __i__ * __size__ + __j__
      if !(__index__ < __len__) {
        break
      }
      __rf_shell__.Call(__push__, "#rf/shell/221").Call(__listTemp__, __list__[__ci_shell__.Call(__index__)])
      __j__++
    }
    __rf_shell__.Call(__push__, "#rf/shell/222").Call(__listNew__, __listTemp__)
    __i__++
  }
  return __listNew__
}
shell_134() {
  __length__ := __shell_module_23__
  __push__ := __shell_module_66__
  return Func("shell_133")
}
shell_135(callback, args*) {
  if !(callback.Name) {
    if !(__rf_shell__.Call(__length__, "#rf/shell/223").Call(args)) {
      return callback
    }
    throw "$.bind: cannot bind a bound function"
  }
  return callback.Bind(args*)
}
shell_136() {
  __length__ := __shell_module_23__
  return Func("shell_135")
}
shell_137(w, exe) {
  if !(__rf_shell__.Call(w.isExists, "#rf/shell/224").Call()) {
    throw "" . (exe) . " is not running"
  }
  if !(__rf_shell__.Call(w.isActive, "#rf/shell/225").Call()) {
    throw "" . (exe) . " is not active"
  }
  __rf_shell__.Call(w.blur, "#rf/shell/226").Call()
  if (__rf_shell__.Call(w.isActive, "#rf/shell/227").Call()) {
    throw "" . (exe) . " is still active"
  }
  __rf_shell__.Call(w.focus, "#rf/shell/228").Call()
  __rf_shell__.Call(w.close, "#rf/shell/229").Call()
}
shell_138() {
  exe := "notepad.exe"
  w := __rf_shell__.Call(__window__, "#rf/shell/230").Call(exe)
  __rf_shell__.Call(w.close, "#rf/shell/231").Call()
  if (__rf_shell__.Call(w.isExists, "#rf/shell/232").Call()) {
    throw "" . (exe) . " is already running"
  }
  __rf_shell__.Call(__open__, "#rf/shell/233").Call(exe)
  __rf_shell__.Call(w.wait, "#rf/shell/234").Call(Func("shell_137").Bind(w, exe))
}
shell_139() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/235").Call(__window__)) {
    throw "__window__ is not a function"
  }
  w := __rf_shell__.Call(__window__, "#rf/shell/236").Call("notepad.exe")
  if !(__rf_shell__.Call(__isObject__, "#rf/shell/237").Call(w)) {
    throw "__window__(""notepad.exe"") is not an object"
  }
  for __index_for__, fn in ["blur", "close", "focus", "getBounds", "hide", "isActive", "isExists", "isFullScreen", "kill", "maximize", "minimize", "restore", "setPriority", "setStyle", "show", "wait"] {
    if !(__rf_shell__.Call(__isFunction__, "#rf/shell/238").Call(w[__ci_shell__.Call(fn)])) {
      throw "__window__('notepad.exe')." . (fn) . " is not a function"
    }
  }
}
shell_140() {
  list := [0]
  __rf_shell__.Call(__unshift__, "#rf/shell/239").Call(list, 1)
  if !(list[1] == 1) {
    throw 0
  }
  len := __rf_shell__.Call(__unshift__, "#rf/shell/240").Call(list, 2, 3, 4)
  if !(len == 5) {
    throw 1
  }
  if !(list[1] == 2) {
    throw 2
  }
  if !(list[4] == 1) {
    throw 3
  }
}
shell_141() {
  if !((__rf_shell__.Call(__toString__, "#rf/shell/241").Call("a")) == "a") {
    throw 0
  }
  if !((__rf_shell__.Call(__toString__, "#rf/shell/242").Call(1)) == "1") {
    throw 1
  }
  if !((__rf_shell__.Call(__toString__, "#rf/shell/243").Call([1, 2, 3])) == "[1, 2, 3]") {
    throw __rf_shell__.Call(__toString__, "#rf/shell/244").Call([1, 2, 3])
  }
  if !((__rf_shell__.Call(__toString__, "#rf/shell/245").Call([1, 2, [3, 4, 5]])) == "[1, 2, [3, 4, 5]]") {
    throw __rf_shell__.Call(__toString__, "#rf/shell/246").Call([1, 2, [3, 4, 5]])
  }
  if !((__rf_shell__.Call(__toString__, "#rf/shell/247").Call({a: 1})) == "{a: 1}") {
    throw __rf_shell__.Call(__toString__, "#rf/shell/248").Call({a: 1})
  }
  if !((__rf_shell__.Call(__toString__, "#rf/shell/249").Call({a: 1, b: {c: 3}})) == "{a: 1, b: {c: 3}}") {
    throw __rf_shell__.Call(__toString__, "#rf/shell/250").Call({a: 1, b: {c: 3}})
  }
}
shell_142() {
  result := __rf_shell__.Call(__split__, "#rf/shell/251").Call("test", ",")
  if !((__rf_shell__.Call(__length__, "#rf/shell/252").Call(result)) == 1) {
    throw result
  }
  if !(result[1] == "test") {
    throw result
  }
}
shell_143() {
  result := __rf_shell__.Call(__split__, "#rf/shell/253").Call("a,b,c", ",")
  if !((__rf_shell__.Call(__length__, "#rf/shell/254").Call(result)) == 3) {
    throw result
  }
  if !(result[1] == "a" && result[2] == "b" && result[3] == "c") {
    throw result
  }
}
shell_144() {
  list := [0, 1, 2]
  first := __rf_shell__.Call(__shift__, "#rf/shell/255").Call(list)
  if !(first == 0) {
    throw 0
  }
  if !(list[1] == 1 && list[2] == 2) {
    throw 1
  }
}
shell_145() {
  list := [0]
  __rf_shell__.Call(__push__, "#rf/shell/256").Call(list, 1)
  if !(list[2] == 1) {
    throw 0
  }
  len := __rf_shell__.Call(__push__, "#rf/shell/257").Call(list, 2, 3, 4)
  if !(len == 5) {
    throw 1
  }
  if !(list[3] == 2) {
    throw 2
  }
  if !(list[5] == 4) {
    throw 3
  }
}
shell_146() {
  list := [0, 1, 2]
  last := __rf_shell__.Call(__pop__, "#rf/shell/258").Call(list)
  if !(last == 2) {
    throw 0
  }
  if !(list[1] == 0 && list[2] == 1) {
    throw 1
  }
}
shell_147() {
  for __index_for__, fn in ["abs", "ceil", "floor", "max", "min", "round"] {
    if !(__rf_shell__.Call(__isFunction__, "#rf/shell/259").Call(__math__[__ci_shell__.Call(fn)])) {
      throw "$.math." . (fn) . " is not a function"
    }
  }
}
shell_148() {
  string := "wow"
  n := __rf_shell__.Call(__length__, "#rf/shell/260").Call(string)
  if !(n == 3) {
    throw 3
  }
}
shell_149() {
  map := {a: 1, b: 2, c: 3}
  n := __rf_shell__.Call(__length__, "#rf/shell/261").Call(map)
  if !(n == 3) {
    throw 2
  }
}
shell_150() {
  list := [1, 2, 3]
  n := __rf_shell__.Call(__length__, "#rf/shell/262").Call(list)
  if !(n == 3) {
    throw 1
  }
}
shell_151() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/263").Call(__getColor__)) {
    throw "$.getColor is not a function"
  }
}
shell_152() {
  f := __rf_shell__.Call(__file__, "#rf/shell/264").Call("test.txt")
  text := "hello world"
  __rf_shell__.Call(f.remove, "#rf/shell/265").Call()
  if (__rf_shell__.Call(f.isExists, "#rf/shell/266").Call()) {
    throw "test.txt should not exist - 1"
  }
  __rf_shell__.Call(f.write, "#rf/shell/267").Call(text)
  if !(__rf_shell__.Call(f.isExists, "#rf/shell/268").Call()) {
    throw "test.txt should exist"
  }
  content := __rf_shell__.Call(f.read, "#rf/shell/269").Call()
  if !(content == text) {
    throw "content is not correct"
  }
  __rf_shell__.Call(f.remove, "#rf/shell/270").Call()
  if (__rf_shell__.Call(f.isExists, "#rf/shell/271").Call()) {
    throw "test.txt should not exist - 2"
  }
}
shell_153() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/272").Call(__file__)) {
    throw "__file__ is not a function"
  }
  f := __rf_shell__.Call(__file__, "#rf/shell/273").Call("test.txt")
  if !(__rf_shell__.Call(__isObject__, "#rf/shell/274").Call(f)) {
    throw "__file__() does not return an object"
  }
  for __index_for__, fn in ["append", "isExists", "read", "remove", "write"] {
    if !(__rf_shell__.Call(__isFunction__, "#rf/shell/275").Call(f[__ci_shell__.Call(fn)])) {
      throw "__file__() does not return an object with function " . (fn) . ""
    }
  }
}
shell_154(exe) {
  return new WindowShell(exe)
}
shell_155() {
  return Func("shell_154")
}
shell_156(list, args*) {
  if !(__rf_shell__.Call(__isArray__, "#rf/shell/276").Call(list)) {
    throw "$.unshift: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/277").Call(list)) . "'"
  }
  list.InsertAt(1, args*)
  return list.Length()
}
shell_157() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  return Func("shell_156")
}
shell_158(__trim__, ipt) {
  if (__rf_shell__.Call(__isString__, "#rf/shell/278").Call(ipt)) {
    return ipt
  }
  if (__rf_shell__.Call(__isNumber__, "#rf/shell/279").Call(ipt)) {
    return "" . (ipt) . ""
  }
  if (__rf_shell__.Call(__isArray__, "#rf/shell/280").Call(ipt)) {
    __result__ := ""
    for __index_for__, it in ipt {
      __result__ := "" . (__result__) . ", " . (__rf_shell__.Call(__toString__, "#rf/shell/281").Call(it)) . ""
    }
    return "[" . (__rf_shell__.Call(__trim__, "#rf/shell/282").Call(__result__, " ,")) . "]"
  }
  if (__rf_shell__.Call(__isObject__, "#rf/shell/283").Call(ipt)) {
    __result__ := ""
    for key, value in ipt {
      __result__ := "" . (__result__) . ", " . (key) . ": " . (__rf_shell__.Call(__toString__, "#rf/shell/284").Call(value)) . ""
    }
    return "{" . (__rf_shell__.Call(__trim__, "#rf/shell/285").Call(__result__, " ,")) . "}"
  }
  throw "__toString__: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/286").Call(ipt)) . "'"
}
shell_159() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  __isNumber__ := __shell_module_45__
  __isObject__ := __shell_module_26__
  __isString__ := __shell_module_46__
  __trim__ := __shell_module_80__
  __toString__ := Func("shell_158").Bind(__trim__)
  return __toString__
}
shell_160(list) {
  if !(__rf_shell__.Call(__isArray__, "#rf/shell/287").Call(list)) {
    throw "$.shift: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/288").Call(list)) . "'"
  }
  __first__ := list[1]
  list.RemoveAt(1)
  return __first__
}
shell_161() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  return Func("shell_160")
}
shell_162(list, value*) {
  if !(__rf_shell__.Call(__isArray__, "#rf/shell/289").Call(list)) {
    throw "$.push: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/290").Call(list)) . "'"
  }
  for __index_for__, __v__ in value {
    list.Push(__v__)
  }
  return list.Length()
}
shell_163() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  return Func("shell_162")
}
shell_164(list) {
  if !(__rf_shell__.Call(__isArray__, "#rf/shell/291").Call(list)) {
    throw "$.pop: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/292").Call(list)) . "'"
  }
  return list.Pop()
}
shell_165() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  return Func("shell_164")
}
shell_166() {
  return new MathShell()
}
shell_167(p := "") {
  if !(p) {
    p := __rf_shell__.Call(__getPosition__, "#rf/shell/293").Call()
  }
  __result__ := 0
  PixelGetColor, __result__, % p[1], % p[2], RGB
  return __result__
}
shell_168() {
  __getPosition__ := __shell_module_38__
  return Func("shell_167")
}
shell_169(__source__) {
  return new FileShell(__source__)
}
shell_170() {
  return Func("shell_169")
}
shell_171(ipt) {
  if (__rf_shell__.Call(__isArray__, "#rf/shell/294").Call(ipt)) {
    return ipt.Length()
  }
  if (__rf_shell__.Call(__isObject__, "#rf/shell/295").Call(ipt)) {
    return ipt.Count()
  }
  if (__rf_shell__.Call(__isString__, "#rf/shell/296").Call(ipt)) {
    return StrLen(ipt)
  }
  throw "$.length: invalid type '" . (__rf_shell__.Call(__getType__, "#rf/shell/297").Call(ipt)) . "'"
}
shell_172() {
  __getType__ := __shell_module_27__
  __isArray__ := __shell_module_44__
  __isObject__ := __shell_module_26__
  __isString__ := __shell_module_46__
  return Func("shell_171")
}
shell_173() {
  string := "string"
  result := __rf_shell__.Call(__subString__, "#rf/shell/298").Call(string, 0)
  if !(result == string) {
    throw result
  }
  result := __rf_shell__.Call(__subString__, "#rf/shell/299").Call(string, 1)
  if !(result == "tring") {
    throw result
  }
  result := __rf_shell__.Call(__subString__, "#rf/shell/300").Call(string, 1, 2)
  if !(result == "t") {
    throw result
  }
  result := __rf_shell__.Call(__subString__, "#rf/shell/301").Call(string, 3, 5)
  if !(result == "in") {
    throw result
  }
}
shell_174() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/302").Call(__play__)) {
    throw "__play__ is not a function"
  }
}
shell_175() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/303").Call(__open__)) {
    throw "$.open is not a function"
  }
}
shell_176() {
  now := __rf_shell__.Call(__now__, "#rf/shell/304").Call()
  if !(__rf_shell__.Call(__isNumber__, "#rf/shell/305").Call(now)) {
    throw 0
  }
}
shell_177() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/306").Call(__noop__)) {
    throw 0
  }
}
shell_178() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/307").Call(__move__)) {
    throw "__move__ is not a function"
  }
}
shell_179() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/308").Call(__min__)) {
    throw "$.min is not a function"
  }
  result := __rf_shell__.Call(__min__, "#rf/shell/309").Call([1, 2, 3])
  if !(result == 1) {
    throw "$.min() does not return the correct result"
  }
}
shell_180() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/310").Call(__max__)) {
    throw "$.max is not a function"
  }
  result := __rf_shell__.Call(__max__, "#rf/shell/311").Call([1, 2, 3])
  if !(result == 3) {
    throw "$.max() does not return the correct result"
  }
}
shell_181() {
  string := "aloha"
  result := __rf_shell__.Call(__isString__, "#rf/shell/312").Call(string)
  if !(result) {
    throw 1
  }
}
shell_182() {
  map := {a: 1}
  result := __rf_shell__.Call(__isObject__, "#rf/shell/313").Call(map)
  if !(result) {
    throw 1
  }
}
shell_183() {
  n := 1
  result := __rf_shell__.Call(__isNumber__, "#rf/shell/314").Call(n)
  if !(result) {
    throw 1
  }
}
shell_184() {
  result := __rf_shell__.Call(__isFunction__, "#rf/shell/315").Call(__isFunction__)
  if !(result) {
    throw 1
  }
}
shell_185() {
  list := []
  result := __rf_shell__.Call(__isArray__, "#rf/shell/316").Call(list)
  if !(list) {
    throw 1
  }
  list := [1, 2, 3]
  result := __rf_shell__.Call(__isArray__, "#rf/shell/317").Call(list)
  if !(result) {
    throw 2
  }
}
shell_186() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/318").Call(__httpGet__)) {
    throw "$.get is not a function"
  }
}
shell_187() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/319").Call(__getPosition__)) {
    throw "__getPosition__ is not a function"
  }
}
shell_188() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/320").Call(__findImage__)) {
    throw 0
  }
}
shell_189() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/321").Call(__findColor__)) {
    throw 0
  }
}
shell_190() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/322").Call(__exit__)) {
    throw "$.exit is not a function"
  }
}
shell_191() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/323").Call(__confirm__)) {
    throw 0
  }
}
shell_192() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/324").Call(__click__)) {
    throw "$.click is not a function"
  }
}
shell_193() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/325").Call(__clearTimeout__)) {
    throw "$.clearTimeout is not a function"
  }
}
shell_194() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/326").Call(__clearInterval__)) {
    throw "$.clearInterval is not a function"
  }
}
shell_195() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/327").Call(__blockInput__)) {
    throw 0
  }
}
shell_196() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/328").Call(__beep__)) {
    throw 0
  }
}
shell_197() {
  if !(__rf_shell__.Call(__isFunction__, "#rf/shell/329").Call(__alert__)) {
    throw 0
  }
}
shell_198(this, callback) {
  WinWait, % this.exe
  if (callback) {
    __rf_shell__.Call(callback, "#rf/shell/330").Call()
  }
  return
}
shell_199(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/331").Call()) {
    return
  }
  WinShow, % this.exe
  return
}
shell_200(this, style) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/332").Call()) {
    return
  }
  __rf_shell__.Call(__noop__, "#rf/shell/333").Call(style)
  WinSet, Style, % style, % this.exe
  return
}
shell_201(this, level) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/334").Call()) {
    return
  }
  __rf_shell__.Call(__noop__, "#rf/shell/335").Call(level)
  Process, Priority, % this.exe, % level
  return
}
shell_202(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/336").Call()) {
    return
  }
  WinRestore, % this.exe
  return
}
shell_203(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/337").Call()) {
    return
  }
  WinMinimize, % this.exe
  return
}
shell_204(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/338").Call()) {
    return
  }
  WinMaximize, % this.exe
  return
}
shell_205(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/339").Call()) {
    return
  }
  WinKill, % this.exe
  return
}
shell_206(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/340").Call()) {
    return false
  }
  __object__ := __rf_shell__.Call(this.getBounds, "#rf/shell/341").Call()
  x := __object__["x"]
  y := __object__["y"]
  width := __object__["width"]
  height := __object__["height"]
  return x == 0 && y == 0 && width == A_ScreenWidth && height == A_ScreenHeight
}
shell_207(this) {
  return WinExist(this.exe)
}
shell_208(this) {
  return WinActive(this.exe)
}
shell_209(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/342").Call()) {
    return
  }
  WinHide, % this.exe
  return
}
shell_210(this) {
  __array__ := [0, 0, 0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  __w__ := __array__[3]
  __h__ := __array__[4]
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/343").Call()) {
    return {x: __x__, y: __y__, width: __w__, height: __h__}
  }
  WinGetPos, __x__, __y__, __w__, __h__, % this.exe
  return {x: __x__, y: __y__, width: __w__, height: __h__}
}
shell_211(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/344").Call()) {
    return
  }
  WinActivate, % this.exe
  return
}
shell_212(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/345").Call()) {
    return
  }
  WinClose, % this.exe
  return
}
shell_213(this) {
  name := "ahk_class Shell_TrayWnd"
  __rf_shell__.Call(__noop__, "#rf/shell/346").Call(name)
  WinActivate, % name
  return
}
shell_214(this, __n__) {
  return Round(__n__)
}
shell_215(this, __number__*) {
  return Min(__number__*)
}
shell_216(this, __number__*) {
  return Max(__number__*)
}
shell_217(this, __n__) {
  return Floor(__n__)
}
shell_218(this, __n__) {
  return Ceil(__n__)
}
shell_219(this, __n__) {
  return Abs(__n__)
}
shell_220(this, content) {
  __rf_shell__.Call(this.remove, "#rf/shell/347").Call()
  __rf_shell__.Call(this.append, "#rf/shell/348").Call(content)
  return
}
shell_221(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/349").Call()) {
    return
  }
  FileDelete, % this.source
  return
}
shell_222(this) {
  if !(__rf_shell__.Call(this.isExists, "#rf/shell/350").Call()) {
    return ""
  }
  __result__ := ""
  FileRead, __result__, % this.source
  return __rf_shell__.Call(__replace__, "#rf/shell/351").Call(__result__, "`r", "")
}
shell_223(this) {
  return FileExist(this.source)
}
shell_224(this, content) {
  __rf_shell__.Call(__noop__, "#rf/shell/352").Call(content)
  FileAppend, % content, % this.source, UTF-8
  return
}
shell_225(text, iStart, iEnd := 0) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/353").Call(text)
  if !(__type__ == "string") {
    throw "$.subString: invalid type '" . (__type__) . "'"
  }
  if (iEnd) {
    __len__ := iEnd - iStart
  } else {
    __len__ := 0
  }
  if !(__len__) {
    return SubStr(text, iStart + 1)
  } else {
    return SubStr(text, iStart + 1, __len__)
  }
}
shell_226() {
  __getType__ := __shell_module_27__
  return Func("shell_225")
}
shell_227(filename) {
  __rf_shell__.Call(__noop__, "#rf/shell/354").Call(filename)
  SoundPlay, % filename
  return
}
shell_228() {
  __noop__ := __shell_module_58__
  return Func("shell_227")
}
shell_229(source) {
  __rf_shell__.Call(__noop__, "#rf/shell/355").Call(source)
  Run, % source
  return
}
shell_230() {
  __noop__ := __shell_module_58__
  return Func("shell_229")
}
shell_231(p := "", speed := 0) {
  if !(p) {
    return
  }
  __rf_shell__.Call(__noop__, "#rf/shell/356").Call(speed)
  MouseMove, p[1], p[2], speed
  return
}
shell_232() {
  __noop__ := __shell_module_58__
  return Func("shell_231")
}
shell_233(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/357").Call(ipt)
  if !(__type__ == "string") {
    return false
  }
  return true
}
shell_234() {
  __getType__ := __shell_module_27__
  return Func("shell_233")
}
shell_235(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/358").Call(ipt)
  if !(__type__ == "number") {
    return false
  }
  return true
}
shell_236() {
  __getType__ := __shell_module_27__
  return Func("shell_235")
}
shell_237(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/359").Call(ipt)
  if !(__type__ == "array") {
    return false
  }
  return true
}
shell_238() {
  __getType__ := __shell_module_27__
  return Func("shell_237")
}
shell_239(__toTuple__) {
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  MouseGetPos, __x__, __y__
  return __rf_shell__.Call(__toTuple__, "#rf/shell/360").Call([__x__, __y__])
}
shell_240() {
  __toTuple__ := __shell_module_81__
  return Func("shell_239").Bind(__toTuple__)
}
shell_241(source, start, end) {
  if !(start) {
    start := [0, 0]
  }
  if !(end) {
    end := [A_ScreenWidth, A_ScreenHeight]
  }
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  __rf_shell__.Call(__noop__, "#rf/shell/361").Call(source)
  ImageSearch __x__, __y__, start[1], start[2], end[1], end[2], % A_ScriptDir . "\\\" . source
  return [__x__, __y__]
}
shell_242() {
  __noop__ := __shell_module_58__
  return Func("shell_241")
}
shell_243(color, start, end, variation := 0) {
  if !(start) {
    start := [0, 0]
  }
  if !(end) {
    end := [A_ScreenWidth, A_ScreenHeight]
  }
  __array__ := [0, 0]
  __x__ := __array__[1]
  __y__ := __array__[2]
  __rf_shell__.Call(__noop__, "#rf/shell/362").Call(color, variation)
  PixelSearch __x__, __y__, start[1], start[2], end[1], end[2], color, variation, Fast RGB
  return [__x__, __y__]
}
shell_244() {
  __noop__ := __shell_module_58__
  return Func("shell_243")
}
shell_245(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/363").Call(ipt)
  if !(__type__ == "object") {
    return false
  }
  return true
}
shell_246() {
  __getType__ := __shell_module_27__
  return Func("shell_245")
}
shell_247(text, callback) {
  __rf_shell__.Call(__noop__, "#rf/shell/364").Call(text, callback)
  MsgBox, 0x4,, % text
  IfMsgBox Yes
    callback.Call(true)
  else
    callback.Call(false)
  return
}
shell_248() {
  __noop__ := __shell_module_58__
  return Func("shell_247")
}
shell_249(key := "left") {
  key := __rf_shell__.Call(__replace__, "#rf/shell/365").Call(key, "-", "")
  key := __rf_shell__.Call(__replace__, "#rf/shell/366").Call(key, ":", " ")
  Click, % key
  return
}
shell_250() {
  __replace__ := __shell_module_67__
  return Func("shell_249")
}
shell_251(ipt) {
  __type__ := __rf_shell__.Call(__getType__, "#rf/shell/367").Call(ipt)
  if !(__type__ == "function") {
    return false
  }
  return true
}
shell_252() {
  __getType__ := __shell_module_27__
  return Func("shell_251")
}
shell_253(message) {
  __rf_shell__.Call(__noop__, "#rf/shell/368").Call(message)
  MsgBox, % message
  return
}
shell_254() {
  __noop__ := __shell_module_58__
  return Func("shell_253")
}
shell_255() {
  string := "string"
  result := __rf_shell__.Call(__startsWith__, "#rf/shell/369").Call(string, "s")
  if !(result) {
    throw 1
  }
  result := __rf_shell__.Call(__startsWith__, "#rf/shell/370").Call(string, "t")
  if (result) {
    throw 2
  }
}
shell_256() {
  a := "alt + f4"
  b := __rf_shell__.Call(__replace__, "#rf/shell/371").Call(a, " ", "")
  if !(b == "alt+f4") {
    throw b
  }
}
shell_257() {
  a := " 123 "
  b := __rf_shell__.Call(__replace__, "#rf/shell/372").Call(a, " ", "")
  if !(b == "123") {
    throw b
  }
}
shell_258(map) {
  return map.n += 1
}
shell_259() {
  map := {n: 0}
  add := __rf_shell__.Call(__once__, "#rf/shell/373").Call(Func("shell_258").Bind(map))
  __rf_shell__.Call(add, "#rf/shell/374").Call()
  if !(map.n == 1) {
    throw 0
  }
  __rf_shell__.Call(add, "#rf/shell/375").Call()
  if !(map.n == 1) {
    throw 1
  }
}
shell_260() {
  n := __rf_shell__.Call(__mod__, "#rf/shell/376").Call(5, 2)
  if !(n == 1) {
    throw n
  }
  n := __rf_shell__.Call(__mod__, "#rf/shell/377").Call(7, 5)
  if !(n == 2) {
    throw n
  }
}
shell_261() {
  result := __rf_shell__.Call(__lte__, "#rf/shell/378").Call(1, 2)
  if !(result) {
    throw 0
  }
  result := __rf_shell__.Call(__lte__, "#rf/shell/379").Call(2, 1)
  if (result) {
    throw 1
  }
  result := __rf_shell__.Call(__lte__, "#rf/shell/380").Call(1, 1)
  if !(result) {
    throw 2
  }
}
shell_262() {
  result := __rf_shell__.Call(__lt__, "#rf/shell/381").Call(1, 2)
  if !(result) {
    throw 0
  }
  result := __rf_shell__.Call(__lt__, "#rf/shell/382").Call(2, 1)
  if (result) {
    throw 1
  }
  result := __rf_shell__.Call(__lt__, "#rf/shell/383").Call(1, 1)
  if (result) {
    throw 2
  }
}
shell_263() {
  result := __rf_shell__.Call(__gte__, "#rf/shell/384").Call(2, 1)
  if !(result) {
    throw 0
  }
  result := __rf_shell__.Call(__gte__, "#rf/shell/385").Call(1, 2)
  if (result) {
    throw 1
  }
  result := __rf_shell__.Call(__gte__, "#rf/shell/386").Call(1, 1)
  if !(result) {
    throw 2
  }
}
shell_264() {
  result := __rf_shell__.Call(__gt__, "#rf/shell/387").Call(2, 1)
  if !(result) {
    throw 0
  }
  result := __rf_shell__.Call(__gt__, "#rf/shell/388").Call(1, 2)
  if (result) {
    throw 1
  }
  result := __rf_shell__.Call(__gt__, "#rf/shell/389").Call(1, 1)
  if (result) {
    throw 2
  }
}
shell_265() {
  type := __rf_shell__.Call(__getType__, "#rf/shell/390").Call(42)
  if !(type == "number") {
    throw type
  }
  type := __rf_shell__.Call(__getType__, "#rf/shell/391").Call(__getType__)
  if !(type == "function") {
    throw type
  }
  type := __rf_shell__.Call(__getType__, "#rf/shell/392").Call([1, 2, 3])
  if !(type == "array") {
    throw type
  }
  type := __rf_shell__.Call(__getType__, "#rf/shell/393").Call({a: 1, b: 2, c: 3})
  if !(type == "object") {
    throw type
  }
  type := __rf_shell__.Call(__getType__, "#rf/shell/394").Call({0: ""})
  if !(type == "object") {
    throw type
  }
  type := __rf_shell__.Call(__getType__, "#rf/shell/395").Call({0: "", 1: "a", 2: "b", 3: "c"})
  if !(type == "object") {
    throw type
  }
}
shell_266() {
  list := [1, 2, 3]
  n := __rf_shell__.Call(__first__, "#rf/shell/396").Call(list)
  if !(n == 1) {
    throw n
  }
}
shell_267() {
  a := {a: 1, b: 2}
  __rf_shell__.Call(__delete__, "#rf/shell/397").Call(a, "a", "b")
  if !(a.a == "" && a.b == "") {
    throw 0
  }
}
shell_268() {
  a := {a: 1, b: 2}
  __rf_shell__.Call(__delete__, "#rf/shell/398").Call(a, "a")
  if !(a.a == "") {
    throw 0
  }
}
shell_269() {
  a := 1
  b := 2
  c := 3
  d := -4
  result := __rf_shell__.Call(__add__, "#rf/shell/399").Call(a)
  if !(result == 1) {
    throw result
  }
  result := __rf_shell__.Call(__add__, "#rf/shell/400").Call(a, b, c)
  if !(result == 6) {
    throw result
  }
  result := __rf_shell__.Call(__add__, "#rf/shell/401").Call(a, b, c, d)
  if !(result == 2) {
    throw result
  }
}
shell_270(ipt) {
  return ipt
}
shell_271() {
  return Func("shell_270")
}
shell_272(ipt, omitting := " `t") {
  return Trim(ipt, omitting)
}
shell_273() {
  return Func("shell_272")
}
shell_274(ipt) {
  __result__ := ipt
  StringLower, __result__, ipt
  return __result__
}
shell_275() {
  return Func("shell_274")
}
shell_276(__type__ := "unknown") {
  return []
}
shell_277() {
  return Func("shell_276")
}
shell_278(text, string) {
  return (InStr(text, string)) == 1
}
shell_279() {
  return Func("shell_278")
}
shell_280(ipt, delimiter) {
  return StrSplit(ipt, delimiter)
}
shell_281() {
  return Func("shell_280")
}
shell_282(ipt, searchment, replacement, limit := -1) {
  return StrReplace(ipt, searchment, replacement, limit)
}
shell_283() {
  return Func("shell_282")
}
shell_284(__cacheOnce__, __i__, callback, args*) {
  if (__cacheOnce__[__ci_shell__.Call(__i__)][1]) {
    return __cacheOnce__[__ci_shell__.Call(__i__)][2]
  }
  __result__ := __rf_shell__.Call(callback, "#rf/shell/402").Call(args*)
  __cacheOnce__[__ci_shell__.Call(__i__)] := [true, __result__]
  return __result__
}
shell_285(__indexOnce__, __cacheOnce__, callback) {
  __i__ := __indexOnce__
  __indexOnce__++
  __cacheOnce__[__ci_shell__.Call(__i__)] := [false, ""]
  return Func("shell_284").Bind(__cacheOnce__, __i__, callback)
}
shell_286() {
  __cacheOnce__ := {}
  __indexOnce__ := 0
  return Func("shell_285").Bind(__indexOnce__, __cacheOnce__)
}
shell_287() {
  return A_TickCount
}
shell_288() {
  return Func("shell_287")
}
shell_289(args*) {
  return
}
shell_290() {
  return Func("shell_289")
}
shell_291(dividend, divisor) {
  return Mod(dividend, divisor)
}
shell_292() {
  return Func("shell_291")
}
shell_293(list) {
  return Min(list*)
}
shell_294() {
  return Func("shell_293")
}
shell_295(list) {
  return Max(list*)
}
shell_296() {
  return Func("shell_295")
}
shell_297(value, other) {
  return value <= other
}
shell_298() {
  return Func("shell_297")
}
shell_299(value, other) {
  return value < other
}
shell_300() {
  return Func("shell_299")
}
shell_301(url, callback) {
  try {
    whr := ComObjCreate("WinHttp.WinHttpRequest.5.1")
    whr.Open("GET", url, true)
    whr.Send()
    whr.WaitForResponse()
    __rf_shell__.Call(callback, "#rf/shell/403").Call(whr.ResponseText)
  } catch {
    __rf_shell__.Call(callback, "#rf/shell/404").Call("")
  }
  return
}
shell_302() {
  return Func("shell_301")
}
shell_303(value, other) {
  return value >= other
}
shell_304() {
  return Func("shell_303")
}
shell_305(value, other) {
  return value > other
}
shell_306() {
  return Func("shell_305")
}
shell_307(list) {
  return list[1]
}
shell_308() {
  return Func("shell_307")
}
shell_309() {
  ExitApp
  return
}
shell_310() {
  return Func("shell_309")
}
shell_311(ipt) {
  if ipt is Number
    return "number"
  if (IsFunc(ipt)) {
    return "function"
  }
  if (IsObject(ipt)) {
    if (ipt.Count() == ipt.Length()) {
      if !(ipt.Length() >= 0) {
        return "function"
      }
      return "array"
    }
    return "object"
  }
  return "string"
}
shell_312() {
  return Func("shell_311")
}
shell_313(list, callback) {
  for __i__, __item__ in list {
    __i__ := __i__ - 1
    __rf_shell__.Call(callback, "#rf/shell/405").Call(__item__, __i__)
  }
  return
}
shell_314() {
  return Func("shell_313")
}
shell_315(__target__, __keys__*) {
  for __index_for__, __k__ in __keys__ {
    __target__.Delete(__k__)
  }
  return
}
shell_316() {
  return Func("shell_315")
}
shell_317(callback) {
  if !(callback) {
    return
  }
  setTimer, % callback, Delete
  return
}
shell_318() {
  return Func("shell_317")
}
shell_319(callback) {
  if !(callback) {
    return
  }
  SetTimer, % callback, Delete
  return
}
shell_320() {
  return Func("shell_319")
}
shell_321(isBlocked) {
  if (isBlocked) {
    BlockInput, On
    return
  }
  BlockInput, Off
  return
}
shell_322() {
  return Func("shell_321")
}
shell_323() {
  SoundBeep
  return
}
shell_324() {
  return Func("shell_323")
}
shell_325(args*) {
  __result__ := 0
  for __index_for__, __arg__ in args {
    __result__ := __result__ + __arg__
  }
  return __result__
}
shell_326() {
  return Func("shell_325")
}
shell_327(__ipt__) {
  if __ipt__ is Number
    return __ipt__ + 1
  return __ipt__
}
shell_328(__fn__, __token__) {
  if (__fn__) {
    return __fn__
  }
  throw Exception("invalid function: " . (__token__) . "")
}

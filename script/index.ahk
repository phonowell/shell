; Generated by Coffee-AHK/0.0.50
global __rf_script__ := Func("script_26")

#KeyHistory, 0
#MaxThreads, 20
#NoEnv
#Persistent
#SingleInstance, Force
#UseHook, On

CoordMode, Mouse, Client
CoordMode, Pixel, Client
CoordMode, ToolTip, Client
SendMode, Event
SetBatchLines, 100ms
SetKeyDelay, 0, 50
SetMouseDelay, 0, 50
StringCaseSense, On

global __script_module_603__ := (Func("script_25")).Call()
global __script_module_606__ := (Func("script_23")).Call()
global __script_module_608__ := (Func("script_21")).Call()
global __script_module_613__ := (Func("script_19")).Call()
global __script_module_602__ := (Func("script_17")).Call()
global __script_module_605__ := (Func("script_15")).Call()
global __script_module_609__ := (Func("script_13")).Call()
global __script_module_610__ := (Func("script_11")).Call()
global __script_module_611__ := (Func("script_9")).Call()
global __script_module_612__ := (Func("script_7")).Call()
global __script_module_607__ := (Func("script_5")).Call()
global __script_module_604__ := (Func("script_3")).Call()
global $alert := __script_module_602__
global $getPosition := __script_module_603__
global $join := __script_module_604__
global $move := __script_module_605__
(Func("script_1")).Call()
script_1() {
  __rf_script__.Call($move, "#rf/script/1").Call([100, 100])
  __array__ := __rf_script__.Call($getPosition, "#rf/script/2").Call()
  x := __array__[1]
  y := __array__[2]
  __rf_script__.Call($alert, "#rf/script/3").Call(__rf_script__.Call($join, "#rf/script/4").Call([x, y], ", "))
}
script_2($toString, list, seperator := ",") {
  $result := ""
  for $i, $item in list {
    $i := $i - 1
    if !($i) {
      $result := __rf_script__.Call($toString, "#rf/script/5").Call($item)
      continue
    }
    $result := "" . ($result) . "" . (seperator) . "" . ($item) . ""
  }
  return $result
}
script_3() {
  $toString := __script_module_607__
  return Func("script_2").Bind($toString)
}
script_4($isString, $isNumber, $isArray, $toString, $trim, $isObject, $getType, ipt) {
  if (__rf_script__.Call($isString, "#rf/script/6").Call(ipt)) {
    return ipt
  }
  if (__rf_script__.Call($isNumber, "#rf/script/7").Call(ipt)) {
    return ipt
  }
  if (__rf_script__.Call($isArray, "#rf/script/8").Call(ipt)) {
    $result := ""
    for __index_for__, key in ipt {
      $result := "" . ($result) . ", " . (__rf_script__.Call($toString, "#rf/script/9").Call(key)) . ""
    }
    return "[" . (__rf_script__.Call($trim, "#rf/script/10").Call($result, " ,")) . "]"
  }
  if (__rf_script__.Call($isObject, "#rf/script/11").Call(ipt)) {
    $result := ""
    for key, value in ipt {
      $result := "" . ($result) . ", " . (key) . ": " . (__rf_script__.Call($toString, "#rf/script/12").Call(value)) . ""
    }
    return "{" . (__rf_script__.Call($trim, "#rf/script/13").Call($result, " ,")) . "}"
  }
  throw Exception("$toString: invalid type '" . (__rf_script__.Call($getType, "#rf/script/14").Call(ipt)) . "'")
}
script_5() {
  $getType := __script_module_608__
  $isArray := __script_module_609__
  $isNumber := __script_module_610__
  $isObject := __script_module_611__
  $isString := __script_module_612__
  $trim := __script_module_613__
  $toString := Func("script_4").Bind($isString, $isNumber, $isArray, $toString, $trim, $isObject, $getType)
  return $toString
}
script_6($getType, ipt) {
  $type := __rf_script__.Call($getType, "#rf/script/15").Call(ipt)
  if !($type == "string") {
    return false
  }
  return true
}
script_7() {
  $getType := __script_module_608__
  return Func("script_6").Bind($getType)
}
script_8($getType, ipt) {
  $type := __rf_script__.Call($getType, "#rf/script/16").Call(ipt)
  if !($type == "object") {
    return false
  }
  return true
}
script_9() {
  $getType := __script_module_608__
  return Func("script_8").Bind($getType)
}
script_10($getType, ipt) {
  $type := __rf_script__.Call($getType, "#rf/script/17").Call(ipt)
  if !($type == "number") {
    return false
  }
  return true
}
script_11() {
  $getType := __script_module_608__
  return Func("script_10").Bind($getType)
}
script_12($getType, ipt) {
  $type := __rf_script__.Call($getType, "#rf/script/18").Call(ipt)
  if !($type == "array") {
    return false
  }
  return true
}
script_13() {
  $getType := __script_module_608__
  return Func("script_12").Bind($getType)
}
script_14($noop, p := "", speed := 0) {
  if !(p) {
    return
  }
  __rf_script__.Call($noop, "#rf/script/19").Call(speed)
  MouseMove, p[1], p[2], speed
  return
}
script_15() {
  $noop := __script_module_606__
  return Func("script_14").Bind($noop)
}
script_16($noop, message) {
  __rf_script__.Call($noop, "#rf/script/20").Call(message)
  MsgBox, % message
  return
}
script_17() {
  $noop := __script_module_606__
  return Func("script_16").Bind($noop)
}
script_18(ipt, omitting := " `t") {
  return Trim(ipt, omitting)
}
script_19() {
  return Func("script_18")
}
script_20(ipt) {
  if ipt is Number
    return "number"
  if (IsFunc(ipt)) {
    return "function"
  }
  if (IsObject(ipt)) {
    if (ipt.Count() == ipt.Length()) {
      if !(ipt.Length() >= 0) {
        return "function"
      }
      return "array"
    }
    return "object"
  }
  return "string"
}
script_21() {
  return Func("script_20")
}
script_22(args*) {
  return
}
script_23() {
  return Func("script_22")
}
script_24() {
  __array__ := [0, 0]
  $x := __array__[1]
  $y := __array__[2]
  MouseGetPos, $x, $y
  return [$x, $y]
}
script_25() {
  return Func("script_24")
}
script_26(__fn__, __token__) {
  if (__fn__) {
    return __fn__
  }
  throw Exception("invalid function: " . (__token__) . "")
}
